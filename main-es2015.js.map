{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/challenge-create-form/challenge-create-form.component.ts","./src/app/components/challenge-create-form/challenge-create-form.component.html","./src/app/components/challenge-display/challenge-display.component.ts","./src/app/components/challenge-display/challenge-display.component.html","./src/app/components/challenge-list-group-item/challenge-list-group-item.component.ts","./src/app/components/challenge-list-group-item/challenge-list-group-item.component.html","./src/app/components/challenge-list-group/challenge-list-group.component.ts","./src/app/components/challenge-list-group/challenge-list-group.component.html","./src/app/components/challenge-submission-form/challenge-submission-form.component.ts","./src/app/components/challenge-submission-form/challenge-submission-form.component.html","./src/app/components/challenges-list/challenges-list.component.ts","./src/app/components/challenges-list/challenges-list.component.html","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/login-form.component.html","./src/app/components/submission-form/submission-form.component.ts","./src/app/components/submission-form/submission-form.component.html","./src/app/components/submission-list-group/submission-list-group.component.ts","./src/app/components/submission-list-group/submission-list-group.component.html","./src/app/components/submissions-list/submissions-list.component.ts","./src/app/components/submissions-list/submissions-list.component.html","./src/app/errors/app-error.ts","./src/app/errors/forbidden-error.ts","./src/app/errors/invalid-error.ts","./src/app/errors/not-found-error.ts","./src/app/errors/unauthorized-error.ts","./src/app/guards/auth.guard.ts","./src/app/guards/injectable/redirect-to-panel.ts","./src/app/services/auth.service.ts","./src/app/services/wp-data/challenge.service.ts","./src/app/services/wp-data/page-manger.service.ts","./src/app/views/challenge-evaluation/challenge-evaluation.component.ts","./src/app/views/challenge-evaluation/challenge-evaluation.component.html","./src/app/views/challenge-submission/challenge-submission.component.ts","./src/app/views/challenge-submission/challenge-submission.component.html","./src/app/views/login-card/login-card.component.ts","./src/app/views/login-card/login-card.component.html","./src/app/views/user-panel/user-panel.component.ts","./src/app/views/user-panel/user-panel.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { UserPanelComponent } from './views/user-panel/user-panel.component';\nimport { LoginCardComponent } from './views/login-card/login-card.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport {RedirectToPanel} from './guards/injectable/redirect-to-panel';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport { ChallengesListComponent } from './components/challenges-list/challenges-list.component';\nimport { ChallengeCreateFormComponent } from './components/challenge-create-form/challenge-create-form.component';\nimport { ChallengeSubmissionComponent } from './views/challenge-submission/challenge-submission.component';\nimport { SubmissionFormComponent } from './components/submission-form/submission-form.component';\nimport { ChallengeSubmissionFormComponent } from './components/challenge-submission-form/challenge-submission-form.component';\nimport { ChallengeListGroupComponent } from './components/challenge-list-group/challenge-list-group.component';\nimport { ChallengeDisplayComponent } from './components/challenge-display/challenge-display.component';\nimport { ChallengeEvaluationComponent } from './views/challenge-evaluation/challenge-evaluation.component';\nimport { SubmissionListGroupComponent } from './components/submission-list-group/submission-list-group.component';\nimport { SubmissionsListComponent } from './components/submissions-list/submissions-list.component';\nimport { ChallengeListGroupItemComponent } from './components/challenge-list-group-item/challenge-list-group-item.component';\n\nconst routes: Routes = [\n  {path: 'panel', component: UserPanelComponent, canActivate: [AuthGuard]},\n  {path: '', component: LoginCardComponent, pathMatch: 'full', resolve: [RedirectToPanel]},\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent,\n    UserPanelComponent,\n    LoginCardComponent,\n    ChallengesListComponent,\n    ChallengeCreateFormComponent,\n    ChallengeSubmissionComponent,\n    SubmissionFormComponent,\n    ChallengeSubmissionFormComponent,\n    ChallengeListGroupComponent,\n    ChallengeDisplayComponent,\n    ChallengeEvaluationComponent,\n    SubmissionListGroupComponent,\n    SubmissionsListComponent,\n    ChallengeListGroupItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FontAwesomeModule\n  ],\n  providers: [\n    RedirectToPanel\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\n\n@Component({\n  selector: 'app-challenge-create-form',\n  templateUrl: './challenge-create-form.component.html',\n  styleUrls: ['./challenge-create-form.component.css']\n})\nexport class ChallengeCreateFormComponent implements OnInit {\n  @Output() submitted = new EventEmitter();\n\n  loading = false;\n  challengeForm: FormGroup;\n  types = this.challenges.types;\n\n  constructor(private challenges: ChallengeService) {}\n\n  ngOnInit(): void {\n    this.challengeForm = new FormGroup({\n      title: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(40)\n      ]),\n      description: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(255)\n      ]),\n      type: new FormControl('art', [\n        Validators.required\n      ]),\n      requirements: new FormArray([])\n    });\n    this.addRequirement();\n    this.addRequirement();\n  }\n\n  get title(): FormControl {\n    return this.challengeForm.get('title') as FormControl;\n  }\n\n  get description(): FormControl {\n    return this.challengeForm.get('description') as FormControl;\n  }\n\n  get type(): FormControl {\n    return this.challengeForm.get('type') as FormControl;\n  }\n\n  get requirements(): FormArray {\n    return this.challengeForm.get('requirements') as FormArray;\n  }\n\n  addRequirement() {\n    this.requirements.push(new FormControl('', Validators.required));\n  }\n\n  removeRequirement(idx: number) {\n    this.requirements.removeAt(idx);\n  }\n\n  submit() {\n    const challenge = this.challengeForm.value;\n    this.loading = true;\n    return this.challenges.create(challenge)\n      .then(() => this.submitted.emit())\n      .catch(() => this.loading = false);\n  }\n}\n","<form [formGroup]=\"challengeForm\" (ngSubmit)=\"submit()\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <label for=\"title\">Título</label>\n      <input type=\"text\" id=\"title\" class=\"form-control\" formControlName=\"title\" required>\n      <div class=\"row\">\n        <div class=\"col-8\">\n          <div class=\"text-sm-left text-danger\" *ngIf=\"title.invalid && (title.dirty || title.touched)\">\n            <span *ngIf=\"title.errors.required\">Este campo es obligatorio</span>\n            <span *ngIf=\"title.errors.minlength\">El título debe ser de mínimo {{title.errors.minlength.requiredLength}}\n              carácteres</span>\n            <span *ngIf=\"title.errors.maxlength\">El título debe ser de máximo {{title.errors.maxlength.requiredLength}}\n              carácteres</span>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <p\n            class=\"text-sm-right w-100\"\n            [ngClass]=\"title.errors?.maxlength ? 'text-danger' : 'text-muted'\"\n          >{{title.value.length}} / 40</p>\n        </div>\n      </div>\n\n      <label for=\"description\">¿Qué hay que hacer para este desafío?</label>\n      <textarea id=\"description\" class=\"form-control\" formControlName=\"description\" required></textarea>\n      <div class=\"row\">\n        <div class=\"col-8\">\n          <div class=\"text-danger\" *ngIf=\"description.invalid && (description.dirty || description.touched)\">\n            <span *ngIf=\"description.errors.required\">Este campo es obligatorio</span>\n            <span *ngIf=\"description.errors.maxlength\">La descripción debe ser de máximo 255 carácteres</span>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <p\n            class=\"text-sm-right w-100\"\n            [ngClass]=\"description.errors?.maxlength ? 'text-danger' : 'text-muted'\"\n          >{{description.value.length}} / 255</p>\n        </div>\n      </div>\n\n      <label for=\"type\">Tipo de Desafío</label>\n      <select class=\"form-control\" id=\"type\" name=\"type\" formControlName=\"type\">\n        <option *ngFor=\"let type_ of types\" [value]=\"type_.slug\">{{type_.name}}</option>\n      </select>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"text-danger\" *ngIf=\"type.invalid && (type.dirty || type.touched)\">\n            <span *ngIf=\"type.errors.required\">Debes elegir un tipo de desafío</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"row\">\n        <div class=\"col-8\">\n          <label for=\"description\">Requisitos</label>\n        </div>\n        <div class=\"col-4\">\n          <button class=\"btn rounded-circle btn-primary\" type=\"button\" [disabled]=\"requirements.length >= 4 || loading\"\n                  (click)=\"addRequirement()\">+</button>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\" formArrayName=\"requirements\">\n          <div class=\"col-12 text-danger mb-4\" *ngIf=\"requirements.invalid && (requirements.dirty || requirements.touched)\">\n            <span>No pueden quedar campos de requisitos vacíos</span>\n          </div>\n          <div *ngFor=\"let _ of requirements.controls; index as idx\" class=\"row\">\n            <div class=\"col-10\">\n              <label style=\"width: 100%;\">\n                <textarea style=\"resize: none\" [formControlName]=\"idx\" class=\"form-control\" placeholder=\"Subir un...\"\n                          required></textarea>\n              </label>\n            </div>\n            <div class=\"col-2\">\n              <button type=\"button\" class=\"btn bg-transparent\" [disabled]=\"loading\" (click)=\"removeRequirement(idx)\">&times;</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row mt-5\">\n    <div class=\"col-12 text-center\">\n      <button [disabled]=\"challengeForm.invalid || loading\" class=\"btn btn-primary\" style=\"width: 90%\" type=\"submit\">\n        <div *ngIf=\"loading; else waiting\" class=\"spinner-border text-light\"></div>\n        <ng-template #waiting><span>Crear desafío</span></ng-template>\n      </button>\n    </div>\n  </div>\n</form>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Challenge} from '../../models/challenge.model';\nimport {Evidence} from '../../models/evidence.model';\n\n@Component({\n  selector: 'app-challenge-display',\n  templateUrl: './challenge-display.component.html',\n  styleUrls: ['./challenge-display.component.css']\n})\nexport class ChallengeDisplayComponent implements OnInit {\n  @Input() challenge!: Challenge;\n  @Input() evidences!: Evidence[];\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  get published() {\n    return new Date(this.challenge.published);\n  }\n\n  isValidURL(url: string) {\n    const urlReg = new RegExp('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?');\n    return url.match(urlReg);\n  }\n\n  isValid(evidence: Evidence) {\n    return evidence.description !== '' && evidence.url !== '' && this.isValidURL(evidence.url);\n  }\n}\n","<div class=\"d-flex w-100 justify-content-between\">\n  <h5 class=\"mb-1 unselectable\">{{challenge.title}}</h5>\n  <small> Publicado el {{published | date}}</small>\n</div>\n<small class=\"text-muted\">¿Qué hay que hacer?</small>\n<p class=\"mb-1 unselectable\">{{challenge.description}}</p>\n<div>\n  <small class=\"text-muted\">Requisitos</small>\n  <ul class=\"list-group list-group-flush\">\n    <li class=\"list-group-item unselectable\" *ngFor=\"let requirement of challenge.requirements\">\n      {{requirement.description}}\n    </li>\n  </ul>\n  <small class=\"text-muted\">Evidencia</small>\n  <ul class=\"list-group list-group-flush limit-scroll\">\n    <li class=\"list-group-item unselectable\" *ngFor=\"let evidence of evidences\">\n      <span *ngIf=\"evidence.description !== '' && !isValidURL(evidence.url)\">{{evidence.description}}</span>\n      <a *ngIf=\"evidence.description !== '' && isValidURL(evidence.url)\" [href]=\"evidence.url\" target=\"_blank\">{{evidence.description}}</a>\n      <span class=\"text-muted text-sm-center\" *ngIf=\"evidence.description === ''\">Evidencia sin descripción</span>\n      <span class=\"text-sm-center text-danger\" *ngIf=\"!isValid(evidence)\">*</span>\n    </li>\n  </ul>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Challenge} from '../../models/challenge.model';\n\n@Component({\n  selector: 'app-challenge-list-group-item',\n  templateUrl: './challenge-list-group-item.component.html',\n  styleUrls: ['./challenge-list-group-item.component.css']\n})\nexport class ChallengeListGroupItemComponent implements OnInit {\n  @Input() public challenge: Challenge;\n  @Output() public selected = new EventEmitter<Challenge>();\n\n  public expand = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  select() {\n    this.selected.emit(this.challenge);\n  }\n\n  get published() {\n    return new Date(this.challenge.published);\n  }\n}\n","<a (click)=\"expand = !expand\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n  <div class=\"d-flex w-100 justify-content-between\">\n    <h5 class=\"mb-1 unselectable\">{{challenge.title}}</h5>\n    <small *ngIf=\"!expand\" class=\"unselectable\">{{challenge.requirements.length}} requisitos - Publicado\n      el {{published | date}}</small>\n    <small *ngIf=\"expand\">\n      <a class=\"participate\" (click)=\"$event.stopPropagation(); $event.preventDefault(); select()\">Participar</a>\n    </small>\n  </div>\n  <small class=\"text-muted\">¿Qué hay que hacer?</small>\n  <p class=\"mb-1 unselectable\">{{challenge.description}}</p>\n  <div *ngIf=\"expand\">\n    <small class=\"text-muted\">Requisitos:</small>\n    <ul class=\"list-group list-group-flush\">\n      <li class=\"list-group-item unselectable\" *ngFor=\"let requirement of challenge.requirements\">\n        {{requirement.description}}\n      </li>\n    </ul>\n  </div>\n</a>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Challenge} from '../../models/challenge.model';\n\n@Component({\n  selector: 'app-challenge-list-group',\n  templateUrl: './challenge-list-group.component.html',\n  styleUrls: ['./challenge-list-group.component.css']\n})\nexport class ChallengeListGroupComponent implements OnInit {\n  @Input() challenges!: Challenge[];\n  @Output() selected = new EventEmitter<Challenge>();\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  select(challenge: Challenge) {\n    this.selected.emit(challenge);\n  }\n}\n","<div class=\"challenge-list\">\n  <div class=\"list-group\">\n    <app-challenge-list-group-item *ngFor=\"let challenge of challenges\" [challenge]=\"challenge\" (selected)=\"select(challenge)\"></app-challenge-list-group-item>\n    <p class=\"text-muted text-center w-100\" *ngIf=\"challenges.length === 0\">No existen todavía desafíos en esta categoría... pero pronto habrán!</p>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\nimport {Challenge} from '../../models/challenge.model';\nimport {Evidence} from '../../models/evidence.model';\n\n@Component({\n  selector: 'app-challenge-submission-form',\n  templateUrl: './challenge-submission-form.component.html',\n  styleUrls: ['./challenge-submission-form.component.css']\n})\nexport class ChallengeSubmissionFormComponent implements OnInit {\n  @Input() challenge!: Challenge;\n  @Output() submitted = new EventEmitter();\n\n  shownEvidenceIdx = 0;\n\n  loading = false;\n  submissionForm: FormGroup;\n  types = this.challenges.types;\n\n  constructor(private challenges: ChallengeService) {}\n\n  ngOnInit(): void {\n    this.submissionForm = new FormGroup({\n      comment: new FormControl('', [\n        Validators.maxLength(255)\n      ]),\n      evidence: new FormArray([])\n    });\n    this.addEvidence();\n    this.addEvidence();\n  }\n\n  get comment(): FormControl {\n    return this.submissionForm.get('comment') as FormControl;\n  }\n\n  get evidences(): FormArray {\n    return this.submissionForm.get('evidence') as FormArray;\n  }\n\n  get parsedEvidences(): Evidence[] {\n    return this.evidences.value;\n  }\n\n  get description(): FormControl {\n    return this.evidences.at(this.shownEvidenceIdx).get('description') as FormControl;\n  }\n\n  get url(): FormControl {\n    return this.evidences.at(this.shownEvidenceIdx).get('url') as FormControl;\n  }\n\n  get rangeEvidence() {\n    return [...Array(this.evidences.length).keys()];\n  }\n\n  addEvidence() {\n    const urlReg = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n\n    const group = new FormGroup({\n      description: new FormControl('', [Validators.required]),\n      url: new FormControl('', [Validators.required, Validators.pattern(urlReg)])\n    });\n    this.evidences.push(group);\n    this.shownEvidenceIdx++;\n    this.showPreviousEvidence();\n  }\n\n  removeEvidence() {\n    this.evidences.removeAt(this.evidences.length - 1);\n    this.shownEvidenceIdx--;\n    this.showNextEvidence();\n  }\n\n  submit() {\n    this.loading = true;\n    return this.challenges.submit(this.submissionForm.value, this.challenge)\n      .then(() => this.submitted.emit())\n      .catch(() => this.loading = false);\n  }\n\n  showPreviousEvidence() {\n    this.shownEvidenceIdx = Math.max(this.shownEvidenceIdx - 1, 0);\n  }\n\n  showNextEvidence() {\n    this.shownEvidenceIdx = Math.min(this.shownEvidenceIdx + 1, this.evidences.length - 1);\n  }\n}\n","<form [formGroup]=\"submissionForm\" (ngSubmit)=\"submit()\">\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <app-challenge-display [challenge]=\"challenge\" [evidences]=\"parsedEvidences\"></app-challenge-display>\n    </div>\n    <div class=\"col-8\">\n      <div class=\"col-12\">\n        <label for=\"comment\">Comentario</label>\n        <textarea id=\"comment\" class=\"form-control\" formControlName=\"comment\"></textarea>\n        <div class=\"row\">\n          <div class=\"col-8\">\n            <div class=\"text-danger\" *ngIf=\"comment.invalid && (comment.dirty || comment.touched)\">\n              <span *ngIf=\"comment.errors.maxlength\">El comentario debe ser de máximo 255 carácteres</span>\n            </div>\n          </div>\n          <div class=\"col-4\">\n            <p\n              class=\"text-sm-right w-100\"\n              [ngClass]=\"comment.errors?.maxlength ? 'text-danger' : 'text-muted'\"\n            >{{comment.value.length}} / 255</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12\">\n        <div class=\"row\">\n          <div class=\"col-8\">\n            <label>Evidencia</label>\n          </div>\n          <div class=\"col-4\">\n            <button class=\"btn rounded-circle btn-primary\" type=\"button\" [disabled]=\"evidences.length >= 10 || loading\"\n                    (click)=\"addEvidence()\">+\n            </button>\n            <button type=\"button\" class=\"btn rounded-circle btn-danger\" [disabled]=\"evidences.length <= 0 || loading\"\n                    (click)=\"removeEvidence()\">\n              &times;\n            </button>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\" formArrayName=\"evidence\">\n            <div *ngIf=\"evidences.length  > 0; else noEvidence\">\n              <div *ngFor=\"let i of rangeEvidence\" [formGroupName]=\"i\" [hidden]=\"i !== shownEvidenceIdx\" class=\"row\">\n                <div class=\"col-12\">\n                  <div class=\"row\">\n                    <div class=\"col-3\">\n                      <span class=\"text-center seq-btn unselectable\"\n                            [hidden]=\"shownEvidenceIdx <= 0\"\n                            (click)=\"showPreviousEvidence()\">\n                        <\n                      </span>\n                    </div>\n                    <span class=\"col-6 text-center text-muted\">Evidencia {{shownEvidenceIdx + 1}}\n                      / {{evidences.length}}</span>\n                    <div class=\"col-3\">\n                      <span class=\"text-center seq-btn unselectable\"\n                            [hidden]=\"shownEvidenceIdx >= evidences.length - 1\"\n                            (click)=\"showNextEvidence()\">\n                        >\n                      </span>\n                    </div>\n                    <label class=\"col-12\">\n                      Link\n                      <input type=\"text\" style=\"resize: none\" formControlName=\"url\" class=\"form-control\"\n                             placeholder=\"https://www.example.com/evidence/file.png\" required>\n                    </label>\n                    <label class=\"col-12\">\n                      Descripción\n                      <textarea type=\"text\" style=\"resize: none\" formControlName=\"description\" class=\"form-control\"\n                                placeholder=\"Foto/video/comprimido que tiene...\" required></textarea>\n                    </label>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-12 text-danger mb-4\"\n                         *ngIf=\"description.invalid && (description.dirty || description.touched)\">\n                      <span>La descripción es obligatoria</span>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-12 text-danger mb-4\" *ngIf=\"url.invalid && (url.dirty || url.touched)\">\n                      <span *ngIf=\"url.errors.required\">La URL no puede estar vacía</span>\n                      <span *ngIf=\"url.errors.pattern\">La URL no es válida</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ng-template #noEvidence>\n              <div class=\"row\">\n                <span class=\"col-12 text-center text-muted\">No hay evidencias</span>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row mt-5\">\n    <div class=\"col-12 text-center\">\n      <button [disabled]=\"submissionForm.invalid || loading\" class=\"btn btn-primary\" style=\"width: 90%\" type=\"submit\">\n        <div *ngIf=\"loading; else waiting\" class=\"spinner-border text-light\"></div>\n        <ng-template #waiting><span>Subir participación</span></ng-template>\n      </button>\n    </div>\n  </div>\n</form>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Challenge, ChallengeType} from '../../models/challenge.model';\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-challenges-list',\n  templateUrl: './challenges-list.component.html',\n  styleUrls: ['./challenges-list.component.css']\n})\nexport class ChallengesListComponent implements OnInit {\n  @Input() interactive = false;\n  @Output() selected = new EventEmitter<Challenge>();\n\n  challenges$: Observable<Challenge[]>;\n  challengeTypes: {name: string, slug: ChallengeType, emoji: string}[];\n\n  selectedType: {name: string, slug: ChallengeType, emoji: string};\n\n  constructor(private challenges: ChallengeService) { }\n\n  ngOnInit(): void {\n    this.challenges$ = this.challenges.getAll();\n    this.challengeTypes = this.challenges.types;\n    this.selectedType = this.challengeTypes[0];\n  }\n\n  filterByType(type: string, challenges: Challenge[]) {\n    return challenges.filter(challenge => challenge.type === type);\n  }\n\n  selectChallenge(challenge: Challenge) {\n    this.selected.emit(challenge);\n  }\n}\n","<div *ngIf=\"challenges$ | async as challenges; else loading\">\n  <div class=\"row\">\n    <div class=\"col-3\"></div>\n    <div class=\"col-6\">\n      <nav class=\"nav nav-pills nav-fill\">\n        <a class=\"nav-item nav-link\" [title]=\"type.name\" data-toggle=\"tooltip\" data-placement=\"top\" [ngClass]=\"selectedType === type ? 'active' : ''\" *ngFor=\"let type of challengeTypes\"\n           (click)=\"selectedType = type\">{{type.emoji}}</a>\n      </nav>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-2\"></div>\n    <div class=\"col-8\">\n      <app-challenge-list-group [challenges]=\"filterByType(selectedType.slug, challenges)\" (selected)=\"selected.emit($event)\"></app-challenge-list-group>\n    </div>\n  </div>\n</div>\n<ng-template #loading>\n  <div class=\"row\">\n    <div class=\"col-12 text-center\">\n      <div class=\"spinner-border text-danger\"></div>\n    </div>\n    <div class=\"col-12 text-center text-danger\">\n      Cargando desafíos...\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {ForbiddenError} from '../../errors/forbidden-error';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\nimport {AppError} from '../../errors/app-error';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n  credentials = {\n    username: '',\n    password: ''\n  };\n\n  disabled = false;\n  error = null;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n    ) {}\n\n  login(): void {\n    this.error = null;\n    this.disabled = true;\n    this.auth.login(this.credentials.username, this.credentials.password)\n      .then(() => {\n        return this.router.navigate(['panel']);\n      })\n      .catch((err: AppError) => {\n        if (err instanceof ForbiddenError) {\n          this.error = 'Usuario y contraseña no coinciden';\n        } else {\n          this.error = 'Error desconocido';\n        }\n        this.disabled = false;\n      });\n  }\n\n  ngOnInit(): void {}\n}\n","<form class=\"login-form text-left\">\n  <div class=\"form-group\">\n    <label for=\"username\">Nombre de usuario</label>\n    <input id=\"username\" type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"credentials.username\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\" required>Contraseña</label>\n    <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"credentials.password\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-danger\" [disabled]=\"disabled\" (click)=\"login();$event.preventDefault()\">Iniciar Sesión</button>\n  <div class=\"alert alert-danger\" *ngIf=\"error\">{{error}}</div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-submission-form',\n  templateUrl: './submission-form.component.html',\n  styleUrls: ['./submission-form.component.css']\n})\nexport class SubmissionFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>submission-form works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-submission-list-group',\n  templateUrl: './submission-list-group.component.html',\n  styleUrls: ['./submission-list-group.component.css']\n})\nexport class SubmissionListGroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>submission-list-group works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-submissions-list',\n  templateUrl: './submissions-list.component.html',\n  styleUrls: ['./submissions-list.component.css']\n})\nexport class SubmissionsListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>submissions-list works!</p>\n","export class AppError extends Error {\r\n  constructor(message?: string, public error?: Error) {\r\n    super(message ? message : error?.message);\r\n  }\r\n}\r\n","import {AppError} from './app-error';\r\n\r\nexport class ForbiddenError extends AppError {}\r\n","import {AppError} from './app-error';\r\n\r\nexport class InvalidError extends AppError {}\r\n","import {AppError} from './app-error';\r\n\r\nexport class NotFoundError extends AppError {}\r\n","import {AppError} from './app-error';\r\n\r\nexport class UnauthorizedError extends AppError {}\r\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  desiredUrl: string;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.auth.isAuthenticated()) return true;\n    this.desiredUrl = state.url;\n    this.router.navigate(['/']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n\n@Injectable()\nexport class RedirectToPanel {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  resolve(): void {\n    if (this.authService.isAuthenticated()) this.router.navigate(['/panel']);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PageMangerService} from './wp-data/page-manger.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {from, Observable} from 'rxjs';\nimport {User} from '../models/user.model';\n\ninterface JWTAuth {\n  token: string;\n  user: User;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private pm: PageMangerService) {}\n\n  public static get token(): string {\n    return this.auth?.token;\n  }\n\n  private static get auth(): JWTAuth | null {\n    return JSON.parse(localStorage.getItem('t'));\n  }\n\n  private static set auth(auth: JWTAuth | null) {\n    localStorage.setItem('t', JSON.stringify(auth));\n  }\n\n  public async login(username: string, password: string): Promise<JWTAuth> {\n    AuthService.auth = await this.pm.post<JWTAuth>('auth/login', {username, password});\n    return AuthService.auth;\n  }\n\n  public me(): Observable<User> {\n    return this.pm.get<User>('auth/me');\n  }\n\n  public logout() {\n    AuthService.auth = null;\n  }\n\n  public isAuthenticated(): boolean {\n    if (AuthService.auth) {\n      const jwtHelper = new JwtHelperService();\n      if (jwtHelper.isTokenExpired(AuthService.auth.token)) this.logout();\n    }\n    return !!AuthService.auth;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Challenge, ChallengeType} from '../../models/challenge.model';\nimport {PageMangerService} from './page-manger.service';\nimport {Observable} from 'rxjs';\nimport {Submission} from '../../models/submission.model';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChallengeService {\n  public readonly types: {name: string, slug: ChallengeType, emoji: string}[] = [\n    {slug: 'art', name: 'Desafío de Arte y Animación', emoji: '🎨'},\n    {slug: 'programming', name: 'Desafío de Programación', emoji: '💻'},\n    {slug: 'music', name: 'Desafío de Música', emoji: '🎶'}\n  ];\n\n  constructor(private pm: PageMangerService) { }\n\n  create(challenge: Challenge): Promise<Challenge> {\n    challenge.notify = environment.production;\n    return this.pm.post('challenges', challenge);\n  }\n\n  submit(submission: Submission, challenge: Challenge): Promise<Submission> {\n    return this.pm.post(`challenges/${challenge.id}/submissions`, submission);\n  }\n\n  getAll(): Observable<Challenge[]> {\n    return this.pm.get('challenges');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {AppError} from '../../errors/app-error';\nimport {NotFoundError} from '../../errors/not-found-error';\nimport {InvalidError} from '../../errors/invalid-error';\nimport {ForbiddenError} from '../../errors/forbidden-error';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {UnauthorizedError} from '../../errors/unauthorized-error';\nimport {JWTAuth} from '../../models/auth.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageMangerService {\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  private static get headers(): HttpHeaders {\n    let headers: HttpHeaders = new HttpHeaders();\n    const t: JWTAuth = JSON.parse(localStorage.getItem('t'));\n\n    if (t) {\n      headers = headers.set('Authorization', `Bearer ${t.token}`);\n    }\n    return headers;\n  }\n  private readonly url = 'https://usmgpm.herokuapp.com/api';\n\n  private static processError(error: HttpErrorResponse): AppError {\n    if (error.status === 404) {\n      return new NotFoundError(`Could not find this resource: ${error.url}`, error);\n    } else if (error.status === 400) {\n      return new InvalidError('Invalid data sent', error);\n    } else if (error.status === 403) {\n      return new ForbiddenError('Forbidden', error);\n    } else if (error.status === 401) {\n      return new UnauthorizedError('Unauthorized', error);\n    } else {\n      return new AppError('Unknown error', error);\n    }\n  }\n\n  private processHttpObservableToPromise<T>(obs: Observable<any>): Promise<T> {\n    return obs.toPromise()\n      .catch(error => {\n        throw PageMangerService.processError(error);\n      })\n      .then(payload => payload as T);\n  }\n\n  private processHttpObservable<T>(obs: Observable<any>): Observable<T> {\n    return obs.pipe(\n      catchError(err => throwError(PageMangerService.processError(err))),\n      map(data => data as T)\n    );\n  }\n\n  public get<T>(namespace: string, params?: any): Observable<T> {\n    const options = {\n      params, headers: PageMangerService.headers\n    };\n    return this.processHttpObservable<T>(this.http.get(this.url + '/' + namespace, options));\n  }\n\n  public post<T>(namespace: string, data?: any): Promise<T> {\n    const options = {\n      headers: PageMangerService.headers\n    };\n    return this.processHttpObservableToPromise<T>(this.http.post(this.url + '/' + namespace, data, options));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-challenge-evaluation',\n  templateUrl: './challenge-evaluation.component.html',\n  styleUrls: ['./challenge-evaluation.component.css']\n})\nexport class ChallengeEvaluationComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>challenge-evaluation works!</p>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Challenge} from '../../models/challenge.model';\n\n@Component({\n  selector: 'app-challenge-submission',\n  templateUrl: './challenge-submission.component.html',\n  styleUrls: ['./challenge-submission.component.css']\n})\nexport class ChallengeSubmissionComponent implements OnInit {\n  @Output() submitted = new EventEmitter<void>();\n\n  challenge: Challenge;\n  ngOnInit(): void {}\n}\n","<div class=\"row\" *ngIf=\"challenge; else waitingChallenge\">\r\n  <div class=\"col-12\">\r\n    <app-challenge-submission-form (submitted)=\"submitted.emit()\" [challenge]=\"challenge\"></app-challenge-submission-form>\r\n  </div>\r\n</div>\r\n<ng-template #waitingChallenge>\r\n  <app-challenges-list [interactive]=\"true\" (selected)=\"challenge = $event\"></app-challenges-list>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-card',\n  templateUrl: './login-card.component.html',\n  styleUrls: ['./login-card.component.css']\n})\nexport class LoginCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron vertical-center\">\n  <div class=\"container text-center\">\n    <div class=\"row\">\n      <div class=\"col-2\"></div>\n      <div class=\"col-8\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h1>USM Games Page Manager</h1>\n            <div class=\"row\">\n              <div class=\"col-2\"></div>\n              <div class=\"col-8\">\n                <p class=\"text-muted text-left\">\n                  Utiliza tus credenciales de usmgames.cl para\n                  acceder a esta aplicación.\n                </p>\n                <app-login-form></app-login-form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-2\"></div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {User} from '../../models/user.model';\nimport {catchError} from 'rxjs/operators';\nimport {ForbiddenError} from '../../errors/forbidden-error';\nimport {AppError} from '../../errors/app-error';\n\n@Component({\n  selector: 'app-user-panel',\n  templateUrl: './user-panel.component.html',\n  styleUrls: ['./user-panel.component.css']\n})\nexport class UserPanelComponent implements OnInit {\n  user$: Observable<User>;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private modalService: NgbModal\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.user$ = this.auth.me()\n      .pipe(catchError((err: AppError) => {\n        if (err instanceof ForbiddenError) {\n          return this.logout().then(() => null);\n        }\n      }));\n  }\n\n  openModal(content) {\n    return this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'xl'}).result;\n  }\n\n  closeModal(modal: NgbModalRef) {\n    modal.dismiss();\n  }\n\n  logout() {\n    this.auth.logout();\n    return this.router.navigate(['/']);\n  }\n}\n","<div *ngIf=\"user$ | async as user; else loading\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"card bg-dark mb-3\">\n        <div class=\"card-body\">\n          <h4>{{user.display_name}} ({{user.roles.join(', ')}})</h4>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div *ngIf=\"user.roles.includes('administrator')\" class=\"col-md-3 text-center\">\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"openModal(createChallenge)\">\n          Crear Desafío\n        </button>\n      </div>\n      <div *ngIf=\"user.roles.includes('administrator')\" class=\"col-md-3 text-center\">\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"openModal(evaluateChallenge)\">\n          Evaluar desafíos\n        </button>\n      </div>\n      <div [className]=\"(user.roles.includes('administrator') ? 'col-md-3' : 'col-md-6') + ' text-center'\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(submitChallenge)\">\n          Participar en desafío\n        </button>\n      </div>\n      <div [className]=\"(user.roles.includes('administrator') ? 'col-md-3' : 'col-md-6') + ' text-center'\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"logout()\">\n          Cerrar Sesión\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #loading>\n  <div class=\"row mt-2\">\n    <div class=\"col-12 text-center\">\n      <div class=\"spinner-border text-danger\"></div>\n      <div class=\"text-danger\">Cargando usuario...</div>\n    </div>\n  </div>\n</ng-template>\n<ng-template #createChallenge let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Crear Desafío</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal(modal)\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-challenge-create-form (submitted)=\"closeModal(modal)\"></app-challenge-create-form>\n  </div>\n</ng-template>\n<ng-template #evaluateChallenge let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Evaluar desafío</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" [disabled]=\"true\" (click)=\"closeModal(modal)\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-challenge-evaluation></app-challenge-evaluation>\n  </div>\n</ng-template>\n<ng-template #submitChallenge let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Subir participación en desafío</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal(modal)\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-challenge-submission (submitted)=\"closeModal(modal)\"></app-challenge-submission>\n  </div>\n</ng-template>\n<div class=\"row mb-2 info\">\n  <div class=\"col-12\">\n    <div class=\"alert alert-info\">\n      Esta aplicación se encuentra en estado Alfa. Si encuentra un error o tiene alguna consulta, por favor no dude\n      en poner un issue en nuestro <a href=\"https://github.com/usm-games/usmgames-page-manager/issues\" target=\"_blank\">repositorio de GitHub</a>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}