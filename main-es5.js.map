{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/challenge-create-form/challenge-create-form.component.ts","webpack:///src/app/components/challenge-create-form/challenge-create-form.component.html","webpack:///src/app/components/challenge-display/challenge-display.component.ts","webpack:///src/app/components/challenge-display/challenge-display.component.html","webpack:///src/app/components/challenge-list-group-item/challenge-list-group-item.component.ts","webpack:///src/app/components/challenge-list-group-item/challenge-list-group-item.component.html","webpack:///src/app/components/challenge-list-group/challenge-list-group.component.ts","webpack:///src/app/components/challenge-list-group/challenge-list-group.component.html","webpack:///src/app/components/challenge-submission-form/challenge-submission-form.component.ts","webpack:///src/app/components/challenge-submission-form/challenge-submission-form.component.html","webpack:///src/app/components/challenges-list/challenges-list.component.ts","webpack:///src/app/components/challenges-list/challenges-list.component.html","webpack:///src/app/components/login-form/login-form.component.ts","webpack:///src/app/components/login-form/login-form.component.html","webpack:///src/app/components/submission-form/submission-form.component.ts","webpack:///src/app/components/submission-form/submission-form.component.html","webpack:///src/app/components/submission-list-group/submission-list-group.component.ts","webpack:///src/app/components/submission-list-group/submission-list-group.component.html","webpack:///src/app/components/submissions-list/submissions-list.component.ts","webpack:///src/app/components/submissions-list/submissions-list.component.html","webpack:///src/app/errors/app-error.ts","webpack:///src/app/errors/forbidden-error.ts","webpack:///src/app/errors/invalid-error.ts","webpack:///src/app/errors/not-found-error.ts","webpack:///src/app/errors/unauthorized-error.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/injectable/redirect-to-panel.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/wp-data/challenge.service.ts","webpack:///src/app/services/wp-data/page-manger.service.ts","webpack:///src/app/views/challenge-evaluation/challenge-evaluation.component.ts","webpack:///src/app/views/challenge-evaluation/challenge-evaluation.component.html","webpack:///src/app/views/challenge-submission/challenge-submission.component.ts","webpack:///src/app/views/challenge-submission/challenge-submission.component.html","webpack:///src/app/views/login-card/login-card.component.ts","webpack:///src/app/views/login-card/login-card.component.html","webpack:///src/app/views/user-panel/user-panel.component.ts","webpack:///src/app/views/user-panel/user-panel.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","routes","path","component","canActivate","pathMatch","redirectTo","AppModule","forRoot","declarations","imports","providers","bootstrap","ChallengeCreateFormComponent","challenges","submitted","loading","types","challengeForm","title","required","minLength","maxLength","description","type","requirements","addRequirement","push","idx","removeAt","challenge","value","create","emit","get","submit","ChallengeDisplayComponent","url","urlReg","RegExp","match","evidence","isValidURL","Date","published","$event","stopPropagation","preventDefault","ChallengeListGroupItemComponent","selected","expand","ChallengeListGroupComponent","ChallengeSubmissionFormComponent","shownEvidenceIdx","submissionForm","comment","addEvidence","group","pattern","evidences","showPreviousEvidence","length","showNextEvidence","Math","max","min","at","Array","removeEvidence","ChallengesListComponent","interactive","challenges$","getAll","challengeTypes","selectedType","filter","LoginFormComponent","auth","router","credentials","username","password","disabled","error","login","navigate","err","SubmissionFormComponent","SubmissionListGroupComponent","SubmissionsListComponent","AppError","message","ForbiddenError","InvalidError","NotFoundError","UnauthorizedError","AuthGuard","next","state","isAuthenticated","desiredUrl","providedIn","RedirectToPanel","authService","AuthService","pm","post","jwtHelper","isTokenExpired","token","logout","JSON","parse","localStorage","getItem","setItem","stringify","ChallengeService","slug","name","emoji","notify","production","submission","PageMangerService","http","obs","toPromise","processError","payload","pipe","data","namespace","params","options","headers","processHttpObservable","processHttpObservableToPromise","status","t","set","ChallengeEvaluationComponent","ChallengeSubmissionComponent","LoginCardComponent","UserPanelComponent","modalService","user$","me","content","open","ariaLabelledBy","size","result","modal","dismiss","environment","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { UserPanelComponent } from './views/user-panel/user-panel.component';\nimport { LoginCardComponent } from './views/login-card/login-card.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport {RedirectToPanel} from './guards/injectable/redirect-to-panel';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport { ChallengesListComponent } from './components/challenges-list/challenges-list.component';\nimport { ChallengeCreateFormComponent } from './components/challenge-create-form/challenge-create-form.component';\nimport { ChallengeSubmissionComponent } from './views/challenge-submission/challenge-submission.component';\nimport { SubmissionFormComponent } from './components/submission-form/submission-form.component';\nimport { ChallengeSubmissionFormComponent } from './components/challenge-submission-form/challenge-submission-form.component';\nimport { ChallengeListGroupComponent } from './components/challenge-list-group/challenge-list-group.component';\nimport { ChallengeDisplayComponent } from './components/challenge-display/challenge-display.component';\nimport { ChallengeEvaluationComponent } from './views/challenge-evaluation/challenge-evaluation.component';\nimport { SubmissionListGroupComponent } from './components/submission-list-group/submission-list-group.component';\nimport { SubmissionsListComponent } from './components/submissions-list/submissions-list.component';\nimport { ChallengeListGroupItemComponent } from './components/challenge-list-group-item/challenge-list-group-item.component';\n\nconst routes: Routes = [\n  {path: 'panel', component: UserPanelComponent, canActivate: [AuthGuard]},\n  {path: '', component: LoginCardComponent, pathMatch: 'full', resolve: [RedirectToPanel]},\n  {path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent,\n    UserPanelComponent,\n    LoginCardComponent,\n    ChallengesListComponent,\n    ChallengeCreateFormComponent,\n    ChallengeSubmissionComponent,\n    SubmissionFormComponent,\n    ChallengeSubmissionFormComponent,\n    ChallengeListGroupComponent,\n    ChallengeDisplayComponent,\n    ChallengeEvaluationComponent,\n    SubmissionListGroupComponent,\n    SubmissionsListComponent,\n    ChallengeListGroupItemComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FontAwesomeModule\n  ],\n  providers: [\n    RedirectToPanel\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\n\n@Component({\n  selector: 'app-challenge-create-form',\n  templateUrl: './challenge-create-form.component.html',\n  styleUrls: ['./challenge-create-form.component.css']\n})\nexport class ChallengeCreateFormComponent implements OnInit {\n  @Output() submitted = new EventEmitter();\n\n  loading = false;\n  challengeForm: FormGroup;\n  types = this.challenges.types;\n\n  constructor(private challenges: ChallengeService) {}\n\n  ngOnInit(): void {\n    this.challengeForm = new FormGroup({\n      title: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(40)\n      ]),\n      description: new FormControl('', [\n        Validators.required,\n        Validators.maxLength(255)\n      ]),\n      type: new FormControl('art', [\n        Validators.required\n      ]),\n      requirements: new FormArray([])\n    });\n    this.addRequirement();\n    this.addRequirement();\n  }\n\n  get title(): FormControl {\n    return this.challengeForm.get('title') as FormControl;\n  }\n\n  get description(): FormControl {\n    return this.challengeForm.get('description') as FormControl;\n  }\n\n  get type(): FormControl {\n    return this.challengeForm.get('type') as FormControl;\n  }\n\n  get requirements(): FormArray {\n    return this.challengeForm.get('requirements') as FormArray;\n  }\n\n  addRequirement() {\n    this.requirements.push(new FormControl('', Validators.required));\n  }\n\n  removeRequirement(idx: number) {\n    this.requirements.removeAt(idx);\n  }\n\n  submit() {\n    const challenge = this.challengeForm.value;\n    this.loading = true;\n    return this.challenges.create(challenge)\n      .then(() => this.submitted.emit())\n      .catch(() => this.loading = false);\n  }\n}\n","<form [formGroup]=\"challengeForm\" (ngSubmit)=\"submit()\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <label for=\"title\">Título</label>\n      <input type=\"text\" id=\"title\" class=\"form-control\" formControlName=\"title\" required>\n      <div class=\"row\">\n        <div class=\"col-8\">\n          <div class=\"text-sm-left text-danger\" *ngIf=\"title.invalid && (title.dirty || title.touched)\">\n            <span *ngIf=\"title.errors.required\">Este campo es obligatorio</span>\n            <span *ngIf=\"title.errors.minlength\">El título debe ser de mínimo {{title.errors.minlength.requiredLength}}\n              carácteres</span>\n            <span *ngIf=\"title.errors.maxlength\">El título debe ser de máximo {{title.errors.maxlength.requiredLength}}\n              carácteres</span>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <p\n            class=\"text-sm-right w-100\"\n            [ngClass]=\"title.errors?.maxlength ? 'text-danger' : 'text-muted'\"\n          >{{title.value.length}} / 40</p>\n        </div>\n      </div>\n\n      <label for=\"description\">¿Qué hay que hacer para este desafío?</label>\n      <textarea id=\"description\" class=\"form-control\" formControlName=\"description\" required></textarea>\n      <div class=\"row\">\n        <div class=\"col-8\">\n          <div class=\"text-danger\" *ngIf=\"description.invalid && (description.dirty || description.touched)\">\n            <span *ngIf=\"description.errors.required\">Este campo es obligatorio</span>\n            <span *ngIf=\"description.errors.maxlength\">La descripción debe ser de máximo 255 carácteres</span>\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <p\n            class=\"text-sm-right w-100\"\n            [ngClass]=\"description.errors?.maxlength ? 'text-danger' : 'text-muted'\"\n          >{{description.value.length}} / 255</p>\n        </div>\n      </div>\n\n      <label for=\"type\">Tipo de Desafío</label>\n      <select class=\"form-control\" id=\"type\" name=\"type\" formControlName=\"type\">\n        <option *ngFor=\"let type_ of types\" [value]=\"type_.slug\">{{type_.name}}</option>\n      </select>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"text-danger\" *ngIf=\"type.invalid && (type.dirty || type.touched)\">\n            <span *ngIf=\"type.errors.required\">Debes elegir un tipo de desafío</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"row\">\n        <div class=\"col-8\">\n          <label for=\"description\">Requisitos</label>\n        </div>\n        <div class=\"col-4\">\n          <button class=\"btn rounded-circle btn-primary\" type=\"button\" [disabled]=\"requirements.length >= 4 || loading\"\n                  (click)=\"addRequirement()\">+</button>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\" formArrayName=\"requirements\">\n          <div class=\"col-12 text-danger mb-4\" *ngIf=\"requirements.invalid && (requirements.dirty || requirements.touched)\">\n            <span>No pueden quedar campos de requisitos vacíos</span>\n          </div>\n          <div *ngFor=\"let _ of requirements.controls; index as idx\" class=\"row\">\n            <div class=\"col-10\">\n              <label style=\"width: 100%;\">\n                <textarea style=\"resize: none\" [formControlName]=\"idx\" class=\"form-control\" placeholder=\"Subir un...\"\n                          required></textarea>\n              </label>\n            </div>\n            <div class=\"col-2\">\n              <button type=\"button\" class=\"btn bg-transparent\" [disabled]=\"loading\" (click)=\"removeRequirement(idx)\">&times;</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row mt-5\">\n    <div class=\"col-12 text-center\">\n      <button [disabled]=\"challengeForm.invalid || loading\" class=\"btn btn-primary\" style=\"width: 90%\" type=\"submit\">\n        <div *ngIf=\"loading; else waiting\" class=\"spinner-border text-light\"></div>\n        <ng-template #waiting><span>Crear desafío</span></ng-template>\n      </button>\n    </div>\n  </div>\n</form>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Challenge} from '../../models/challenge.model';\nimport {Evidence} from '../../models/evidence.model';\n\n@Component({\n  selector: 'app-challenge-display',\n  templateUrl: './challenge-display.component.html',\n  styleUrls: ['./challenge-display.component.css']\n})\nexport class ChallengeDisplayComponent implements OnInit {\n  @Input() challenge!: Challenge;\n  @Input() evidences!: Evidence[];\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  get published() {\n    return new Date(this.challenge.published);\n  }\n\n  isValidURL(url: string) {\n    const urlReg = new RegExp('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?');\n    return url.match(urlReg);\n  }\n\n  isValid(evidence: Evidence) {\n    return evidence.description !== '' && evidence.url !== '' && this.isValidURL(evidence.url);\n  }\n}\n","<div class=\"d-flex w-100 justify-content-between\">\n  <h5 class=\"mb-1 unselectable\">{{challenge.title}}</h5>\n  <small> Publicado el {{published | date}}</small>\n</div>\n<small class=\"text-muted\">¿Qué hay que hacer?</small>\n<p class=\"mb-1 unselectable\">{{challenge.description}}</p>\n<div>\n  <small class=\"text-muted\">Requisitos</small>\n  <ul class=\"list-group list-group-flush\">\n    <li class=\"list-group-item unselectable\" *ngFor=\"let requirement of challenge.requirements\">\n      {{requirement.description}}\n    </li>\n  </ul>\n  <small class=\"text-muted\">Evidencia</small>\n  <ul class=\"list-group list-group-flush limit-scroll\">\n    <li class=\"list-group-item unselectable\" *ngFor=\"let evidence of evidences\">\n      <span *ngIf=\"evidence.description !== '' && !isValidURL(evidence.url)\">{{evidence.description}}</span>\n      <a *ngIf=\"evidence.description !== '' && isValidURL(evidence.url)\" [href]=\"evidence.url\" target=\"_blank\">{{evidence.description}}</a>\n      <span class=\"text-muted text-sm-center\" *ngIf=\"evidence.description === ''\">Evidencia sin descripción</span>\n      <span class=\"text-sm-center text-danger\" *ngIf=\"!isValid(evidence)\">*</span>\n    </li>\n  </ul>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Challenge} from '../../models/challenge.model';\n\n@Component({\n  selector: 'app-challenge-list-group-item',\n  templateUrl: './challenge-list-group-item.component.html',\n  styleUrls: ['./challenge-list-group-item.component.css']\n})\nexport class ChallengeListGroupItemComponent implements OnInit {\n  @Input() public challenge: Challenge;\n  @Output() public selected = new EventEmitter<Challenge>();\n\n  public expand = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  select() {\n    this.selected.emit(this.challenge);\n  }\n\n  get published() {\n    return new Date(this.challenge.published);\n  }\n}\n","<a (click)=\"expand = !expand\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n  <div class=\"d-flex w-100 justify-content-between\">\n    <h5 class=\"mb-1 unselectable\">{{challenge.title}}</h5>\n    <small *ngIf=\"!expand\" class=\"unselectable\">{{challenge.requirements.length}} requisitos - Publicado\n      el {{published | date}}</small>\n    <small *ngIf=\"expand\">\n      <a class=\"participate\" (click)=\"$event.stopPropagation(); $event.preventDefault(); select()\">Participar</a>\n    </small>\n  </div>\n  <small class=\"text-muted\">¿Qué hay que hacer?</small>\n  <p class=\"mb-1 unselectable\">{{challenge.description}}</p>\n  <div *ngIf=\"expand\">\n    <small class=\"text-muted\">Requisitos:</small>\n    <ul class=\"list-group list-group-flush\">\n      <li class=\"list-group-item unselectable\" *ngFor=\"let requirement of challenge.requirements\">\n        {{requirement.description}}\n      </li>\n    </ul>\n  </div>\n</a>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Challenge} from '../../models/challenge.model';\n\n@Component({\n  selector: 'app-challenge-list-group',\n  templateUrl: './challenge-list-group.component.html',\n  styleUrls: ['./challenge-list-group.component.css']\n})\nexport class ChallengeListGroupComponent implements OnInit {\n  @Input() challenges!: Challenge[];\n  @Output() selected = new EventEmitter<Challenge>();\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  select(challenge: Challenge) {\n    this.selected.emit(challenge);\n  }\n}\n","<div class=\"challenge-list\">\n  <div class=\"list-group\">\n    <app-challenge-list-group-item *ngFor=\"let challenge of challenges\" [challenge]=\"challenge\" (selected)=\"select(challenge)\"></app-challenge-list-group-item>\n    <p class=\"text-muted text-center w-100\" *ngIf=\"challenges.length === 0\">No existen todavía desafíos en esta categoría... pero pronto habrán!</p>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\nimport {Challenge} from '../../models/challenge.model';\nimport {Evidence} from '../../models/evidence.model';\n\n@Component({\n  selector: 'app-challenge-submission-form',\n  templateUrl: './challenge-submission-form.component.html',\n  styleUrls: ['./challenge-submission-form.component.css']\n})\nexport class ChallengeSubmissionFormComponent implements OnInit {\n  @Input() challenge!: Challenge;\n  @Output() submitted = new EventEmitter();\n\n  shownEvidenceIdx = 0;\n\n  loading = false;\n  submissionForm: FormGroup;\n  types = this.challenges.types;\n\n  constructor(private challenges: ChallengeService) {}\n\n  ngOnInit(): void {\n    this.submissionForm = new FormGroup({\n      comment: new FormControl('', [\n        Validators.maxLength(255)\n      ]),\n      evidence: new FormArray([])\n    });\n    this.addEvidence();\n    this.addEvidence();\n  }\n\n  get comment(): FormControl {\n    return this.submissionForm.get('comment') as FormControl;\n  }\n\n  get evidences(): FormArray {\n    return this.submissionForm.get('evidence') as FormArray;\n  }\n\n  get parsedEvidences(): Evidence[] {\n    return this.evidences.value;\n  }\n\n  get description(): FormControl {\n    return this.evidences.at(this.shownEvidenceIdx).get('description') as FormControl;\n  }\n\n  get url(): FormControl {\n    return this.evidences.at(this.shownEvidenceIdx).get('url') as FormControl;\n  }\n\n  get rangeEvidence() {\n    return [...Array(this.evidences.length).keys()];\n  }\n\n  addEvidence() {\n    const urlReg = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\n\n    const group = new FormGroup({\n      description: new FormControl('', [Validators.required]),\n      url: new FormControl('', [Validators.required, Validators.pattern(urlReg)])\n    });\n    this.evidences.push(group);\n    this.shownEvidenceIdx++;\n    this.showPreviousEvidence();\n  }\n\n  removeEvidence() {\n    this.evidences.removeAt(this.evidences.length - 1);\n    this.shownEvidenceIdx--;\n    this.showNextEvidence();\n  }\n\n  submit() {\n    this.loading = true;\n    return this.challenges.submit(this.submissionForm.value, this.challenge)\n      .then(() => this.submitted.emit())\n      .catch(() => this.loading = false);\n  }\n\n  showPreviousEvidence() {\n    this.shownEvidenceIdx = Math.max(this.shownEvidenceIdx - 1, 0);\n  }\n\n  showNextEvidence() {\n    this.shownEvidenceIdx = Math.min(this.shownEvidenceIdx + 1, this.evidences.length - 1);\n  }\n}\n","<form [formGroup]=\"submissionForm\" (ngSubmit)=\"submit()\">\n  <div class=\"row\">\n    <div class=\"col-4\">\n      <app-challenge-display [challenge]=\"challenge\" [evidences]=\"parsedEvidences\"></app-challenge-display>\n    </div>\n    <div class=\"col-8\">\n      <div class=\"col-12\">\n        <label for=\"comment\">Comentario</label>\n        <textarea id=\"comment\" class=\"form-control\" formControlName=\"comment\"></textarea>\n        <div class=\"row\">\n          <div class=\"col-8\">\n            <div class=\"text-danger\" *ngIf=\"comment.invalid && (comment.dirty || comment.touched)\">\n              <span *ngIf=\"comment.errors.maxlength\">El comentario debe ser de máximo 255 carácteres</span>\n            </div>\n          </div>\n          <div class=\"col-4\">\n            <p\n              class=\"text-sm-right w-100\"\n              [ngClass]=\"comment.errors?.maxlength ? 'text-danger' : 'text-muted'\"\n            >{{comment.value.length}} / 255</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12\">\n        <div class=\"row\">\n          <div class=\"col-8\">\n            <label>Evidencia</label>\n          </div>\n          <div class=\"col-4\">\n            <button class=\"btn rounded-circle btn-primary\" type=\"button\" [disabled]=\"evidences.length >= 10 || loading\"\n                    (click)=\"addEvidence()\">+\n            </button>\n            <button type=\"button\" class=\"btn rounded-circle btn-danger\" [disabled]=\"evidences.length <= 0 || loading\"\n                    (click)=\"removeEvidence()\">\n              &times;\n            </button>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\" formArrayName=\"evidence\">\n            <div *ngIf=\"evidences.length  > 0; else noEvidence\">\n              <div *ngFor=\"let i of rangeEvidence\" [formGroupName]=\"i\" [hidden]=\"i !== shownEvidenceIdx\" class=\"row\">\n                <div class=\"col-12\">\n                  <div class=\"row\">\n                    <div class=\"col-3\">\n                      <span class=\"text-center seq-btn unselectable\"\n                            [hidden]=\"shownEvidenceIdx <= 0\"\n                            (click)=\"showPreviousEvidence()\">\n                        <\n                      </span>\n                    </div>\n                    <span class=\"col-6 text-center text-muted\">Evidencia {{shownEvidenceIdx + 1}}\n                      / {{evidences.length}}</span>\n                    <div class=\"col-3\">\n                      <span class=\"text-center seq-btn unselectable\"\n                            [hidden]=\"shownEvidenceIdx >= evidences.length - 1\"\n                            (click)=\"showNextEvidence()\">\n                        >\n                      </span>\n                    </div>\n                    <label class=\"col-12\">\n                      Link\n                      <input type=\"text\" style=\"resize: none\" formControlName=\"url\" class=\"form-control\"\n                             placeholder=\"https://www.example.com/evidence/file.png\" required>\n                    </label>\n                    <label class=\"col-12\">\n                      Descripción\n                      <textarea type=\"text\" style=\"resize: none\" formControlName=\"description\" class=\"form-control\"\n                                placeholder=\"Foto/video/comprimido que tiene...\" required></textarea>\n                    </label>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-12 text-danger mb-4\"\n                         *ngIf=\"description.invalid && (description.dirty || description.touched)\">\n                      <span>La descripción es obligatoria</span>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-12 text-danger mb-4\" *ngIf=\"url.invalid && (url.dirty || url.touched)\">\n                      <span *ngIf=\"url.errors.required\">La URL no puede estar vacía</span>\n                      <span *ngIf=\"url.errors.pattern\">La URL no es válida</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ng-template #noEvidence>\n              <div class=\"row\">\n                <span class=\"col-12 text-center text-muted\">No hay evidencias</span>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"row mt-5\">\n    <div class=\"col-12 text-center\">\n      <button [disabled]=\"submissionForm.invalid || loading\" class=\"btn btn-primary\" style=\"width: 90%\" type=\"submit\">\n        <div *ngIf=\"loading; else waiting\" class=\"spinner-border text-light\"></div>\n        <ng-template #waiting><span>Subir participación</span></ng-template>\n      </button>\n    </div>\n  </div>\n</form>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Challenge, ChallengeType} from '../../models/challenge.model';\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\nimport {Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-challenges-list',\n  templateUrl: './challenges-list.component.html',\n  styleUrls: ['./challenges-list.component.css']\n})\nexport class ChallengesListComponent implements OnInit {\n  @Input() interactive = false;\n  @Output() selected = new EventEmitter<Challenge>();\n\n  challenges$: Observable<Challenge[]>;\n  challengeTypes: {name: string, slug: ChallengeType, emoji: string}[];\n\n  selectedType: {name: string, slug: ChallengeType, emoji: string};\n\n  constructor(private challenges: ChallengeService) { }\n\n  ngOnInit(): void {\n    this.challenges$ = this.challenges.getAll();\n    this.challengeTypes = this.challenges.types;\n    this.selectedType = this.challengeTypes[0];\n  }\n\n  filterByType(type: string, challenges: Challenge[]) {\n    return challenges.filter(challenge => challenge.type === type);\n  }\n\n  selectChallenge(challenge: Challenge) {\n    this.selected.emit(challenge);\n  }\n}\n","<div *ngIf=\"challenges$ | async as challenges; else loading\">\n  <div class=\"row\">\n    <div class=\"col-3\"></div>\n    <div class=\"col-6\">\n      <nav class=\"nav nav-pills nav-fill\">\n        <a class=\"nav-item nav-link\" [title]=\"type.name\" data-toggle=\"tooltip\" data-placement=\"top\" [ngClass]=\"selectedType === type ? 'active' : ''\" *ngFor=\"let type of challengeTypes\"\n           (click)=\"selectedType = type\">{{type.emoji}}</a>\n      </nav>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-2\"></div>\n    <div class=\"col-8\">\n      <app-challenge-list-group [challenges]=\"filterByType(selectedType.slug, challenges)\" (selected)=\"selected.emit($event)\"></app-challenge-list-group>\n    </div>\n  </div>\n</div>\n<ng-template #loading>\n  <div class=\"row\">\n    <div class=\"col-12 text-center\">\n      <div class=\"spinner-border text-danger\"></div>\n    </div>\n    <div class=\"col-12 text-center text-danger\">\n      Cargando desafíos...\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport {ForbiddenError} from '../../errors/forbidden-error';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\nimport {AppError} from '../../errors/app-error';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n  credentials = {\n    username: '',\n    password: ''\n  };\n\n  disabled = false;\n  error = null;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n    ) {}\n\n  login(): void {\n    this.error = null;\n    this.disabled = true;\n    this.auth.login(this.credentials.username, this.credentials.password)\n      .then(() => {\n        return this.router.navigate(['panel']);\n      })\n      .catch((err: AppError) => {\n        if (err instanceof ForbiddenError) {\n          this.error = 'Usuario y contraseña no coinciden';\n        } else {\n          this.error = 'Error desconocido';\n        }\n        this.disabled = false;\n      });\n  }\n\n  ngOnInit(): void {}\n}\n","<form class=\"login-form text-left\">\n  <div class=\"form-group\">\n    <label for=\"username\">Nombre de usuario</label>\n    <input id=\"username\" type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"credentials.username\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\" required>Contraseña</label>\n    <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"credentials.password\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-danger\" [disabled]=\"disabled\" (click)=\"login();$event.preventDefault()\">Iniciar Sesión</button>\n  <div class=\"alert alert-danger\" *ngIf=\"error\">{{error}}</div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-submission-form',\n  templateUrl: './submission-form.component.html',\n  styleUrls: ['./submission-form.component.css']\n})\nexport class SubmissionFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>submission-form works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-submission-list-group',\n  templateUrl: './submission-list-group.component.html',\n  styleUrls: ['./submission-list-group.component.css']\n})\nexport class SubmissionListGroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>submission-list-group works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-submissions-list',\n  templateUrl: './submissions-list.component.html',\n  styleUrls: ['./submissions-list.component.css']\n})\nexport class SubmissionsListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>submissions-list works!</p>\n","export class AppError extends Error {\r\n  constructor(message?: string, public error?: Error) {\r\n    super(message ? message : error?.message);\r\n  }\r\n}\r\n","import {AppError} from './app-error';\r\n\r\nexport class ForbiddenError extends AppError {}\r\n","import {AppError} from './app-error';\r\n\r\nexport class InvalidError extends AppError {}\r\n","import {AppError} from './app-error';\r\n\r\nexport class NotFoundError extends AppError {}\r\n","import {AppError} from './app-error';\r\n\r\nexport class UnauthorizedError extends AppError {}\r\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  desiredUrl: string;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.auth.isAuthenticated()) return true;\n    this.desiredUrl = state.url;\n    this.router.navigate(['/']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n\n@Injectable()\nexport class RedirectToPanel {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  resolve(): void {\n    if (this.authService.isAuthenticated()) this.router.navigate(['/panel']);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PageMangerService} from './wp-data/page-manger.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {from, Observable} from 'rxjs';\nimport {User} from '../models/user.model';\n\ninterface JWTAuth {\n  token: string;\n  user: User;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private pm: PageMangerService) {}\n\n  public static get token(): string {\n    return this.auth?.token;\n  }\n\n  private static get auth(): JWTAuth | null {\n    return JSON.parse(localStorage.getItem('t'));\n  }\n\n  private static set auth(auth: JWTAuth | null) {\n    localStorage.setItem('t', JSON.stringify(auth));\n  }\n\n  public async login(username: string, password: string): Promise<JWTAuth> {\n    AuthService.auth = await this.pm.post<JWTAuth>('auth/login', {username, password});\n    return AuthService.auth;\n  }\n\n  public me(): Observable<User> {\n    return this.pm.get<User>('auth/me');\n  }\n\n  public logout() {\n    AuthService.auth = null;\n  }\n\n  public isAuthenticated(): boolean {\n    if (AuthService.auth) {\n      const jwtHelper = new JwtHelperService();\n      if (jwtHelper.isTokenExpired(AuthService.auth.token)) this.logout();\n    }\n    return !!AuthService.auth;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Challenge, ChallengeType} from '../../models/challenge.model';\nimport {PageMangerService} from './page-manger.service';\nimport {Observable} from 'rxjs';\nimport {Submission} from '../../models/submission.model';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChallengeService {\n  public readonly types: {name: string, slug: ChallengeType, emoji: string}[] = [\n    {slug: 'art', name: 'Desafío de Arte y Animación', emoji: '🎨'},\n    {slug: 'programming', name: 'Desafío de Programación', emoji: '💻'},\n    {slug: 'music', name: 'Desafío de Música', emoji: '🎶'}\n  ];\n\n  constructor(private pm: PageMangerService) { }\n\n  create(challenge: Challenge): Promise<Challenge> {\n    challenge.notify = environment.production;\n    return this.pm.post('challenges', challenge);\n  }\n\n  submit(submission: Submission, challenge: Challenge): Promise<Submission> {\n    return this.pm.post(`challenges/${challenge.id}/submissions`, submission);\n  }\n\n  getAll(): Observable<Challenge[]> {\n    return this.pm.get('challenges');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {AppError} from '../../errors/app-error';\nimport {NotFoundError} from '../../errors/not-found-error';\nimport {InvalidError} from '../../errors/invalid-error';\nimport {ForbiddenError} from '../../errors/forbidden-error';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {UnauthorizedError} from '../../errors/unauthorized-error';\nimport {JWTAuth} from '../../models/auth.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageMangerService {\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  private static get headers(): HttpHeaders {\n    let headers: HttpHeaders = new HttpHeaders();\n    const t: JWTAuth = JSON.parse(localStorage.getItem('t'));\n\n    if (t) {\n      headers = headers.set('Authorization', `Bearer ${t.token}`);\n    }\n    return headers;\n  }\n  private readonly url = 'https://usmgpm.herokuapp.com/api';\n\n  private static processError(error: HttpErrorResponse): AppError {\n    if (error.status === 404) {\n      return new NotFoundError(`Could not find this resource: ${error.url}`, error);\n    } else if (error.status === 400) {\n      return new InvalidError('Invalid data sent', error);\n    } else if (error.status === 403) {\n      return new ForbiddenError('Forbidden', error);\n    } else if (error.status === 401) {\n      return new UnauthorizedError('Unauthorized', error);\n    } else {\n      return new AppError('Unknown error', error);\n    }\n  }\n\n  private processHttpObservableToPromise<T>(obs: Observable<any>): Promise<T> {\n    return obs.toPromise()\n      .catch(error => {\n        throw PageMangerService.processError(error);\n      })\n      .then(payload => payload as T);\n  }\n\n  private processHttpObservable<T>(obs: Observable<any>): Observable<T> {\n    return obs.pipe(\n      catchError(err => throwError(PageMangerService.processError(err))),\n      map(data => data as T)\n    );\n  }\n\n  public get<T>(namespace: string, params?: any): Observable<T> {\n    const options = {\n      params, headers: PageMangerService.headers\n    };\n    return this.processHttpObservable<T>(this.http.get(this.url + '/' + namespace, options));\n  }\n\n  public post<T>(namespace: string, data?: any): Promise<T> {\n    const options = {\n      headers: PageMangerService.headers\n    };\n    return this.processHttpObservableToPromise<T>(this.http.post(this.url + '/' + namespace, data, options));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-challenge-evaluation',\n  templateUrl: './challenge-evaluation.component.html',\n  styleUrls: ['./challenge-evaluation.component.css']\n})\nexport class ChallengeEvaluationComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>challenge-evaluation works!</p>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Challenge} from '../../models/challenge.model';\n\n@Component({\n  selector: 'app-challenge-submission',\n  templateUrl: './challenge-submission.component.html',\n  styleUrls: ['./challenge-submission.component.css']\n})\nexport class ChallengeSubmissionComponent implements OnInit {\n  @Output() submitted = new EventEmitter<void>();\n\n  challenge: Challenge;\n  ngOnInit(): void {}\n}\n","<div class=\"row\" *ngIf=\"challenge; else waitingChallenge\">\r\n  <div class=\"col-12\">\r\n    <app-challenge-submission-form (submitted)=\"submitted.emit()\" [challenge]=\"challenge\"></app-challenge-submission-form>\r\n  </div>\r\n</div>\r\n<ng-template #waitingChallenge>\r\n  <app-challenges-list [interactive]=\"true\" (selected)=\"challenge = $event\"></app-challenges-list>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-card',\n  templateUrl: './login-card.component.html',\n  styleUrls: ['./login-card.component.css']\n})\nexport class LoginCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron vertical-center\">\n  <div class=\"container text-center\">\n    <div class=\"row\">\n      <div class=\"col-2\"></div>\n      <div class=\"col-8\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h1>USM Games Page Manager</h1>\n            <div class=\"row\">\n              <div class=\"col-2\"></div>\n              <div class=\"col-8\">\n                <p class=\"text-muted text-left\">\n                  Utiliza tus credenciales de usmgames.cl para\n                  acceder a esta aplicación.\n                </p>\n                <app-login-form></app-login-form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-2\"></div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {User} from '../../models/user.model';\nimport {catchError} from 'rxjs/operators';\nimport {ForbiddenError} from '../../errors/forbidden-error';\nimport {AppError} from '../../errors/app-error';\n\n@Component({\n  selector: 'app-user-panel',\n  templateUrl: './user-panel.component.html',\n  styleUrls: ['./user-panel.component.css']\n})\nexport class UserPanelComponent implements OnInit {\n  user$: Observable<User>;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private modalService: NgbModal\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.user$ = this.auth.me()\n      .pipe(catchError((err: AppError) => {\n        if (err instanceof ForbiddenError) {\n          return this.logout().then(() => null);\n        }\n      }));\n  }\n\n  openModal(content) {\n    return this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'xl'}).result;\n  }\n\n  closeModal(modal: NgbModalRef) {\n    modal.dismiss();\n  }\n\n  logout() {\n    this.auth.logout();\n    return this.router.navigate(['/']);\n  }\n}\n","<div *ngIf=\"user$ | async as user; else loading\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"card bg-dark mb-3\">\n        <div class=\"card-body\">\n          <h4>{{user.display_name}} ({{user.roles.join(', ')}})</h4>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div *ngIf=\"user.roles.includes('administrator')\" class=\"col-md-3 text-center\">\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"openModal(createChallenge)\">\n          Crear Desafío\n        </button>\n      </div>\n      <div *ngIf=\"user.roles.includes('administrator')\" class=\"col-md-3 text-center\">\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"openModal(evaluateChallenge)\">\n          Evaluar desafíos\n        </button>\n      </div>\n      <div [className]=\"(user.roles.includes('administrator') ? 'col-md-3' : 'col-md-6') + ' text-center'\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(submitChallenge)\">\n          Participar en desafío\n        </button>\n      </div>\n      <div [className]=\"(user.roles.includes('administrator') ? 'col-md-3' : 'col-md-6') + ' text-center'\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"logout()\">\n          Cerrar Sesión\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #loading>\n  <div class=\"row mt-2\">\n    <div class=\"col-12 text-center\">\n      <div class=\"spinner-border text-danger\"></div>\n      <div class=\"text-danger\">Cargando usuario...</div>\n    </div>\n  </div>\n</ng-template>\n<ng-template #createChallenge let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Crear Desafío</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal(modal)\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-challenge-create-form (submitted)=\"closeModal(modal)\"></app-challenge-create-form>\n  </div>\n</ng-template>\n<ng-template #evaluateChallenge let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Evaluar desafío</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" [disabled]=\"true\" (click)=\"closeModal(modal)\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-challenge-evaluation></app-challenge-evaluation>\n  </div>\n</ng-template>\n<ng-template #submitChallenge let-modal>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Subir participación en desafío</h4>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal(modal)\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-challenge-submission (submitted)=\"closeModal(modal)\"></app-challenge-submission>\n  </div>\n</ng-template>\n<div class=\"row mb-2 info\">\n  <div class=\"col-12\">\n    <div class=\"alert alert-info\">\n      Esta aplicación se encuentra en estado Alfa. Si encuentra un error o tiene alguna consulta, por favor no dude\n      en poner un issue en nuestro <a href=\"https://github.com/usm-games/usmgames-page-manager/issues\" target=\"_blank\">repositorio de GitHub</a>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}