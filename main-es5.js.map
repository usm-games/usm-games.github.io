{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/challenge-create-form/challenge-create-form.component.ts","webpack:///src/app/components/challenge-create-form/challenge-create-form.component.html","webpack:///src/app/components/challenge-display/challenge-display.component.ts","webpack:///src/app/components/challenge-display/challenge-display.component.html","webpack:///src/app/components/challenge-list-group-item/challenge-list-group-item.component.ts","webpack:///src/app/components/challenge-list-group-item/challenge-list-group-item.component.html","webpack:///src/app/components/challenge-list-group/challenge-list-group.component.ts","webpack:///src/app/components/challenge-list-group/challenge-list-group.component.html","webpack:///src/app/components/challenge-submission-form/challenge-submission-form.component.ts","webpack:///src/app/components/challenge-submission-form/challenge-submission-form.component.html","webpack:///src/app/components/challenges-list/challenges-list.component.ts","webpack:///src/app/components/challenges-list/challenges-list.component.html","webpack:///src/app/components/evaluation-form/evaluation-form.component.ts","webpack:///src/app/components/evaluation-form/evaluation-form.component.html","webpack:///src/app/components/login-form/login-form.component.ts","webpack:///src/app/components/login-form/login-form.component.html","webpack:///src/app/components/submission-display/submission-display.component.ts","webpack:///src/app/components/submission-display/submission-display.component.html","webpack:///src/app/components/submission-form/submission-form.component.ts","webpack:///src/app/components/submission-form/submission-form.component.html","webpack:///src/app/components/submission-list-group-item/submission-list-group-item.component.ts","webpack:///src/app/components/submission-list-group-item/submission-list-group-item.component.html","webpack:///src/app/components/submission-list-group/submission-list-group.component.ts","webpack:///src/app/components/submission-list-group/submission-list-group.component.html","webpack:///src/app/errors/app-error.ts","webpack:///src/app/errors/forbidden-error.ts","webpack:///src/app/errors/invalid-error.ts","webpack:///src/app/errors/not-found-error.ts","webpack:///src/app/errors/unauthorized-error.ts","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/injectable/redirect-to-panel.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/wp-data/challenge.service.ts","webpack:///src/app/services/wp-data/page-manger.service.ts","webpack:///src/app/services/wp-data/submissions.service.ts","webpack:///src/app/views/challenge-evaluation/challenge-evaluation.component.ts","webpack:///src/app/views/challenge-evaluation/challenge-evaluation.component.html","webpack:///src/app/views/challenge-submission/challenge-submission.component.ts","webpack:///src/app/views/challenge-submission/challenge-submission.component.html","webpack:///src/app/views/login-card/login-card.component.ts","webpack:///src/app/views/login-card/login-card.component.html","webpack:///src/app/views/my-submissions/my-submissions.component.ts","webpack:///src/app/views/my-submissions/my-submissions.component.html","webpack:///src/app/views/user-panel/user-panel.component.ts","webpack:///src/app/views/user-panel/user-panel.component.html","webpack:///src/app/views/user-register/user-register.component.ts","webpack:///src/app/views/user-register/user-register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","routes","path","component","canActivate","pathMatch","redirectTo","AppModule","provide","useValue","forRoot","declarations","imports","providers","bootstrap","ChallengeCreateFormComponent","challenges","submitted","loading","types","challengeForm","title","required","minLength","maxLength","description","type","slug","requirements","addRequirement","push","idx","removeAt","challenge","value","create","emit","console","error","get","submit","ChallengeDisplayComponent","url","urlReg","RegExp","match","evidence","isValidURL","Date","published","$event","stopPropagation","preventDefault","ChallengeListGroupItemComponent","notSubmittedOnly","selected","expand","ChallengeListGroupComponent","ChallengeSubmissionFormComponent","shownEvidenceIdx","submissionForm","comment","addEvidence","group","pattern","evidences","showPreviousEvidence","length","showNextEvidence","Math","max","min","at","Array","removeEvidence","ChallengesListComponent","interactive","challenges$","getAll","challengeTypes","selectedType","filter","EvaluationFormComponent","submissions","submission","evaluated","baseScore","bonusScore","updateScore","changes","typeBySlug","defaultScore","approve","totalScore","reject","LoginFormComponent","auth","router","credentials","username","password","disabled","login","navigate","err","SubmissionDisplayComponent","SubmissionFormComponent","SubmissionListGroupItemComponent","select","SubmissionListGroupComponent","onlyNotEvaluated","filters","pending","name","options","notEvaluated","all","filtersItems","Object","entries","filterCode","submissions$","getFromChallenge","onChallengeUpdate","currentValue","evaluation","AppError","message","ForbiddenError","InvalidError","NotFoundError","UnauthorizedError","AuthGuard","next","state","isAuthenticated","desiredUrl","providedIn","RedirectToPanel","authService","AuthService","pm","post","email","displayName","isAdmin","display_name","admin","jwtHelper","isTokenExpired","token","logout","JSON","parse","localStorage","getItem","setItem","stringify","ChallengeService","emoji","notify","forEach","elem","PageMangerService","http","obs","toPromise","processError","payload","pipe","data","namespace","params","headers","processHttpObservable","processHttpObservableToPromise","log","status","t","set","SubmissionsService","user","_parseAPISubmission","not_evaluated","subs","map","points","challenge_id","user_id","approved","sub","ChallengeEvaluationComponent","ChallengeSubmissionComponent","LoginCardComponent","MySubmissionsComponent","selectedSubmission","updateSubmissions","getFromUser","UserPanelComponent","modalService","user$","me","content","open","ariaLabelledBy","size","result","modal","dismiss","UserRegisterComponent","users","registerForm","registerUser","setValue","register","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {LOCALE_ID, NgModule} from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { LoginFormComponent } from './components/login-form/login-form.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { UserPanelComponent } from './views/user-panel/user-panel.component';\r\nimport { LoginCardComponent } from './views/login-card/login-card.component';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport {RedirectToPanel} from './guards/injectable/redirect-to-panel';\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\nimport { ChallengesListComponent } from './components/challenges-list/challenges-list.component';\r\nimport { ChallengeCreateFormComponent } from './components/challenge-create-form/challenge-create-form.component';\r\nimport { ChallengeSubmissionComponent } from './views/challenge-submission/challenge-submission.component';\r\nimport { SubmissionFormComponent } from './components/submission-form/submission-form.component';\r\nimport { ChallengeSubmissionFormComponent } from './components/challenge-submission-form/challenge-submission-form.component';\r\nimport { ChallengeListGroupComponent } from './components/challenge-list-group/challenge-list-group.component';\r\nimport { ChallengeDisplayComponent } from './components/challenge-display/challenge-display.component';\r\nimport { ChallengeEvaluationComponent } from './views/challenge-evaluation/challenge-evaluation.component';\r\nimport { SubmissionListGroupComponent } from './components/submission-list-group/submission-list-group.component';\r\nimport { ChallengeListGroupItemComponent } from './components/challenge-list-group-item/challenge-list-group-item.component';\r\nimport { EvaluationFormComponent } from './components/evaluation-form/evaluation-form.component';\r\n\r\nimport localeEs from '@angular/common/locales/es';\r\nimport {registerLocaleData} from '@angular/common';\r\nimport { SubmissionListGroupItemComponent } from './components/submission-list-group-item/submission-list-group-item.component';\r\nimport { SubmissionDisplayComponent } from './components/submission-display/submission-display.component';\r\nimport { UserRegisterComponent } from './views/user-register/user-register.component';\nimport { MySubmissionsComponent } from './views/my-submissions/my-submissions.component';\r\n\r\n\r\nregisterLocaleData(localeEs);\r\n\r\nconst routes: Routes = [\r\n  {path: 'panel', component: UserPanelComponent, canActivate: [AuthGuard]},\r\n  {path: '', component: LoginCardComponent, pathMatch: 'full', resolve: [RedirectToPanel]},\r\n  {path: '**', redirectTo: ''}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginFormComponent,\r\n    UserPanelComponent,\r\n    LoginCardComponent,\r\n    ChallengesListComponent,\r\n    ChallengeCreateFormComponent,\r\n    ChallengeSubmissionComponent,\r\n    SubmissionFormComponent,\r\n    ChallengeSubmissionFormComponent,\r\n    ChallengeListGroupComponent,\r\n    ChallengeDisplayComponent,\r\n    ChallengeEvaluationComponent,\r\n    SubmissionListGroupComponent,\r\n    ChallengeListGroupItemComponent,\r\n    EvaluationFormComponent,\r\n    SubmissionListGroupItemComponent,\r\n    SubmissionDisplayComponent,\r\n    UserRegisterComponent,\r\n    MySubmissionsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FontAwesomeModule\r\n  ],\r\n  providers: [\r\n    { provide: LOCALE_ID, useValue: 'es-CL'},\r\n    RedirectToPanel\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\r\n\r\n@Component({\r\n  selector: 'app-challenge-create-form',\r\n  templateUrl: './challenge-create-form.component.html',\r\n  styleUrls: ['./challenge-create-form.component.css']\r\n})\r\nexport class ChallengeCreateFormComponent implements OnInit {\r\n  @Output() submitted = new EventEmitter();\r\n\r\n  loading = false;\r\n  challengeForm: FormGroup;\r\n  types = this.challenges.types;\r\n\r\n  constructor(private challenges: ChallengeService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.challengeForm = new FormGroup({\r\n      title: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(40)\r\n      ]),\r\n      description: new FormControl('', [\r\n        Validators.required,\r\n        Validators.maxLength(255)\r\n      ]),\r\n      type: new FormControl(this.challenges.types[0].slug, [\r\n        Validators.required\r\n      ]),\r\n      requirements: new FormArray([])\r\n    });\r\n    this.addRequirement();\r\n    this.addRequirement();\r\n  }\r\n\r\n  get title(): FormControl {\r\n    return this.challengeForm.get('title') as FormControl;\r\n  }\r\n\r\n  get description(): FormControl {\r\n    return this.challengeForm.get('description') as FormControl;\r\n  }\r\n\r\n  get type(): FormControl {\r\n    return this.challengeForm.get('type') as FormControl;\r\n  }\r\n\r\n  get requirements(): FormArray {\r\n    return this.challengeForm.get('requirements') as FormArray;\r\n  }\r\n\r\n  addRequirement() {\r\n    this.requirements.push(new FormControl('', Validators.required));\r\n  }\r\n\r\n  removeRequirement(idx: number) {\r\n    this.requirements.removeAt(idx);\r\n  }\r\n\r\n  submit() {\r\n    const challenge = this.challengeForm.value;\r\n    this.loading = true;\r\n    return this.challenges.create(challenge)\r\n      .then(() => this.submitted.emit())\r\n      .catch((e) => {\r\n        console.error(e);\r\n        this.loading = false;\r\n      });\r\n  }\r\n}\r\n","<form [formGroup]=\"challengeForm\" (ngSubmit)=\"submit()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-sm-6\">\r\n      <label for=\"title\">Título</label>\r\n      <input type=\"text\" id=\"title\" class=\"form-control\" formControlName=\"title\" required>\r\n      <div class=\"row\">\r\n        <div class=\"col-8\">\r\n          <div class=\"text-sm-left text-danger\" *ngIf=\"title.invalid && (title.dirty || title.touched)\">\r\n            <span *ngIf=\"title.errors.required\">Este campo es obligatorio</span>\r\n            <span *ngIf=\"title.errors.minlength\">El título debe ser de mínimo {{title.errors.minlength.requiredLength}}\r\n              carácteres</span>\r\n            <span *ngIf=\"title.errors.maxlength\">El título debe ser de máximo {{title.errors.maxlength.requiredLength}}\r\n              carácteres</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <p\r\n            class=\"text-sm-right w-100\"\r\n            [ngClass]=\"title.errors?.maxlength ? 'text-danger' : 'text-muted'\"\r\n          >{{title.value.length}} / 40</p>\r\n        </div>\r\n      </div>\r\n\r\n      <label for=\"description\">¿Qué hay que hacer para este desafío?</label>\r\n      <textarea id=\"description\" class=\"form-control\" formControlName=\"description\" required></textarea>\r\n      <div class=\"row\">\r\n        <div class=\"col-8\">\r\n          <div class=\"text-danger\" *ngIf=\"description.invalid && (description.dirty || description.touched)\">\r\n            <span *ngIf=\"description.errors.required\">Este campo es obligatorio</span>\r\n            <span *ngIf=\"description.errors.maxlength\">La descripción debe ser de máximo 255 carácteres</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <p\r\n            class=\"text-sm-right w-100\"\r\n            [ngClass]=\"description.errors?.maxlength ? 'text-danger' : 'text-muted'\"\r\n          >{{description.value.length}} / 255</p>\r\n        </div>\r\n      </div>\r\n\r\n      <label for=\"type\">Tipo de Desafío</label>\r\n      <select class=\"form-control\" id=\"type\" name=\"type\" formControlName=\"type\">\r\n        <option *ngFor=\"let type_ of types\" [value]=\"type_.slug\">{{type_.name}}</option>\r\n      </select>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"text-danger\" *ngIf=\"type.invalid && (type.dirty || type.touched)\">\r\n            <span *ngIf=\"type.errors.required\">Debes elegir un tipo de desafío</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 col-sm-6\">\r\n      <div class=\"row\">\r\n        <div class=\"col-8\">\r\n          <label for=\"description\">Requisitos</label>\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <button class=\"btn rounded-circle btn-primary\" type=\"button\" [disabled]=\"requirements.length >= 4 || loading\"\r\n                  (click)=\"addRequirement()\">+</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\" formArrayName=\"requirements\">\r\n          <div class=\"col-12 text-danger mb-4\" *ngIf=\"requirements.invalid && (requirements.dirty || requirements.touched)\">\r\n            <span>No pueden quedar campos de requisitos vacíos</span>\r\n          </div>\r\n          <div *ngFor=\"let _ of requirements.controls; index as idx\" class=\"row\">\r\n            <div class=\"col-10\">\r\n              <label style=\"width: 100%;\">\r\n                <textarea style=\"resize: none\" [formControlName]=\"idx\" class=\"form-control\" placeholder=\"Subir un...\"\r\n                          required></textarea>\r\n              </label>\r\n            </div>\r\n            <div class=\"col-2\">\r\n              <button type=\"button\" class=\"btn bg-transparent\" [disabled]=\"loading\" (click)=\"removeRequirement(idx)\">&times;</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-5\">\r\n    <div class=\"col-12 text-center\">\r\n      <button [disabled]=\"challengeForm.invalid || loading\" class=\"btn btn-primary\" style=\"width: 90%\" type=\"submit\">\r\n        <div *ngIf=\"loading; else waiting\" class=\"spinner-border text-light\"></div>\r\n        <ng-template #waiting><span>Crear desafío</span></ng-template>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Challenge} from '../../models/challenge.model';\r\nimport {Evidence} from '../../models/evidence.model';\r\n\r\n@Component({\r\n  selector: 'app-challenge-display',\r\n  templateUrl: './challenge-display.component.html',\r\n  styleUrls: ['./challenge-display.component.css']\r\n})\r\nexport class ChallengeDisplayComponent implements OnInit {\r\n  @Input() challenge!: Challenge;\r\n  @Input() evidences!: Evidence[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get published() {\r\n    return new Date(this.challenge.published);\r\n  }\r\n\r\n  isValidURL(url: string) {\r\n    const urlReg = new RegExp('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?');\r\n    return url.match(urlReg);\r\n  }\r\n\r\n  isValid(evidence: Evidence) {\r\n    return evidence.description !== '' && evidence.url !== '' && this.isValidURL(evidence.url);\r\n  }\r\n}\r\n","<div class=\"d-flex w-100 justify-content-between\">\r\n  <h5 class=\"mb-1 unselectable\">{{challenge.title}}</h5>\r\n  <small> Publicado el {{published | date}}</small>\r\n</div>\r\n<small class=\"text-muted\">¿Qué hay que hacer?</small>\r\n<p class=\"mb-1 unselectable\">{{challenge.description}}</p>\r\n<div>\r\n  <small class=\"text-muted\">Requisitos</small>\r\n  <ul class=\"list-group list-group-flush\">\r\n    <li class=\"list-group-item unselectable\" *ngFor=\"let requirement of challenge.requirements\">\r\n      {{requirement.description}}\r\n    </li>\r\n  </ul>\r\n  <small class=\"text-muted\" *ngIf=\"evidences\">Evidencia</small>\r\n  <ul class=\"list-group list-group-flush limit-scroll\">\r\n    <li class=\"list-group-item unselectable\" *ngFor=\"let evidence of evidences\">\r\n      <span *ngIf=\"evidence.description !== '' && !isValidURL(evidence.url)\">{{evidence.description}}</span>\r\n      <a *ngIf=\"evidence.description !== '' && isValidURL(evidence.url)\" [href]=\"evidence.url\" target=\"_blank\">{{evidence.description}}</a>\r\n      <span class=\"text-muted text-sm-center\" *ngIf=\"evidence.description === ''\">Evidencia sin descripción</span>\r\n      <span class=\"text-sm-center text-danger\" *ngIf=\"!isValid(evidence)\">*</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Challenge} from '../../models/challenge.model';\r\n\r\n@Component({\r\n  selector: 'app-challenge-list-group-item',\r\n  templateUrl: './challenge-list-group-item.component.html',\r\n  styleUrls: ['./challenge-list-group-item.component.css']\r\n})\r\nexport class ChallengeListGroupItemComponent implements OnInit {\r\n  @Input() public challenge: Challenge;\r\n  @Input() public notSubmittedOnly = false;\r\n  @Output() public selected = new EventEmitter<Challenge>();\r\n\r\n  public expand = false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  select() {\r\n    this.selected.emit(this.challenge);\r\n  }\r\n\r\n  get published() {\r\n    return new Date(this.challenge.published);\r\n  }\r\n}\r\n","<a (click)=\"expand = !expand\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n  <div class=\"row text-left\">\r\n      <div class=\"col\">\r\n        <h5 class=\"mb-1 unselectable\"\r\n            *ngIf=\"!notSubmittedOnly || (notSubmittedOnly && !challenge.submitted_to)\">{{challenge.title}}</h5>\r\n        <del><h5 class=\"mb-1 unselectable text-muted\"\r\n                 *ngIf=\"notSubmittedOnly && !!challenge.submitted_to\">{{challenge.title}}</h5></del>\r\n      </div>\r\n      <div class=\"col text-right\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <small class=\"unselectable w-100 text-right\">Publicado el {{published | date}}</small>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <small class=\"col\" *ngIf=\"expand && notSubmittedOnly\">\r\n            <a\r\n              *ngIf=\"!challenge.submitted_to\"\r\n              class=\"participate text-right w-100\"\r\n              (click)=\"$event.stopPropagation(); $event.preventDefault(); select()\"\r\n            >\r\n              Subir entrega\r\n            </a>\r\n            <span class=\"text-dark text-right\" *ngIf=\"challenge.submitted_to\">Ya entregado</span>\r\n          </small>\r\n          <small class=\"col\" *ngIf=\"expand && !notSubmittedOnly\">\r\n            <a\r\n              class=\"participate text-right w-100\"\r\n              (click)=\"$event.stopPropagation(); $event.preventDefault(); select()\"\r\n            >\r\n              Seleccionar\r\n            </a>\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  <small class=\"text-muted\">¿Qué hay que hacer?</small>\r\n  <p class=\"mb-1 unselectable\">{{challenge.description}}</p>\r\n  <div *ngIf=\"expand\">\r\n    <small class=\"text-muted\">Requisitos:</small>\r\n    <ul class=\"list-group list-group-flush\">\r\n      <li class=\"list-group-item unselectable\" *ngFor=\"let requirement of challenge.requirements\">\r\n        {{requirement.description}}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</a>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Challenge} from '../../models/challenge.model';\r\n\r\n@Component({\r\n  selector: 'app-challenge-list-group',\r\n  templateUrl: './challenge-list-group.component.html',\r\n  styleUrls: ['./challenge-list-group.component.css']\r\n})\r\nexport class ChallengeListGroupComponent implements OnInit {\r\n  @Input() challenges!: Challenge[];\r\n  @Input() notSubmittedOnly = false;\r\n  @Output() selected = new EventEmitter<Challenge>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  select(challenge: Challenge) {\r\n    this.selected.emit(challenge);\r\n  }\r\n}\r\n","<div class=\"challenge-list\">\r\n  <div class=\"list-group\">\r\n    <app-challenge-list-group-item *ngFor=\"let challenge of challenges\" [notSubmittedOnly]=\"notSubmittedOnly\" [challenge]=\"challenge\" (selected)=\"select(challenge)\"></app-challenge-list-group-item>\r\n    <p class=\"text-muted text-center w-100\" *ngIf=\"challenges.length === 0\">No existen todavía desafíos en esta categoría... pero pronto habrán!</p>\r\n  </div>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\r\nimport {Challenge} from '../../models/challenge.model';\r\nimport {Evidence} from '../../models/evidence.model';\r\n\r\n@Component({\r\n  selector: 'app-challenge-submission-form',\r\n  templateUrl: './challenge-submission-form.component.html',\r\n  styleUrls: ['./challenge-submission-form.component.css']\r\n})\r\nexport class ChallengeSubmissionFormComponent implements OnInit {\r\n  @Input() challenge!: Challenge;\r\n  @Output() submitted = new EventEmitter();\r\n\r\n  shownEvidenceIdx = 0;\r\n\r\n  loading = false;\r\n  submissionForm: FormGroup;\r\n  types = this.challenges.types;\r\n\r\n  constructor(private challenges: ChallengeService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.submissionForm = new FormGroup({\r\n      comment: new FormControl('', [\r\n        Validators.maxLength(255)\r\n      ]),\r\n      evidence: new FormArray([])\r\n    });\r\n    this.addEvidence();\r\n    this.addEvidence();\r\n  }\r\n\r\n  get comment(): FormControl {\r\n    return this.submissionForm.get('comment') as FormControl;\r\n  }\r\n\r\n  get evidences(): FormArray {\r\n    return this.submissionForm.get('evidence') as FormArray;\r\n  }\r\n\r\n  get parsedEvidences(): Evidence[] {\r\n    return this.evidences.value;\r\n  }\r\n\r\n  get description(): FormControl {\r\n    return this.evidences.at(this.shownEvidenceIdx).get('description') as FormControl;\r\n  }\r\n\r\n  get url(): FormControl {\r\n    return this.evidences.at(this.shownEvidenceIdx).get('url') as FormControl;\r\n  }\r\n\r\n  get rangeEvidence() {\r\n    return [...Array(this.evidences.length).keys()];\r\n  }\r\n\r\n  addEvidence() {\r\n    const urlReg = '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\r\n\r\n    const group = new FormGroup({\r\n      description: new FormControl('', [Validators.required]),\r\n      url: new FormControl('', [Validators.required, Validators.pattern(urlReg)])\r\n    });\r\n    this.evidences.push(group);\r\n    this.shownEvidenceIdx++;\r\n    this.showPreviousEvidence();\r\n  }\r\n\r\n  removeEvidence() {\r\n    this.evidences.removeAt(this.evidences.length - 1);\r\n    this.shownEvidenceIdx--;\r\n    this.showNextEvidence();\r\n  }\r\n\r\n  submit() {\r\n    this.loading = true;\r\n    return this.challenges.submit(this.submissionForm.value, this.challenge)\r\n      .then(() => this.submitted.emit())\r\n      .catch(() => this.loading = false);\r\n  }\r\n\r\n  showPreviousEvidence() {\r\n    this.shownEvidenceIdx = Math.max(this.shownEvidenceIdx - 1, 0);\r\n  }\r\n\r\n  showNextEvidence() {\r\n    this.shownEvidenceIdx = Math.min(this.shownEvidenceIdx + 1, this.evidences.length - 1);\r\n  }\r\n}\r\n","<form [formGroup]=\"submissionForm\" (ngSubmit)=\"submit()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-4\">\r\n      <app-challenge-display [challenge]=\"challenge\" [evidences]=\"parsedEvidences\"></app-challenge-display>\r\n    </div>\r\n    <div class=\"col-8\">\r\n      <div class=\"col-12\">\r\n        <label for=\"comment\">Comentario</label>\r\n        <textarea id=\"comment\" class=\"form-control\" formControlName=\"comment\"></textarea>\r\n        <div class=\"row\">\r\n          <div class=\"col-8\">\r\n            <div class=\"text-danger\" *ngIf=\"comment.invalid && (comment.dirty || comment.touched)\">\r\n              <span *ngIf=\"comment.errors.maxlength\">El comentario debe ser de máximo 255 carácteres</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <p\r\n              class=\"text-sm-right w-100\"\r\n              [ngClass]=\"comment.errors?.maxlength ? 'text-danger' : 'text-muted'\"\r\n            >{{comment.value.length}} / 255</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-8\">\r\n            <label>Evidencia</label>\r\n          </div>\r\n          <div class=\"col-4\">\r\n            <button class=\"btn rounded-circle btn-primary\" type=\"button\" [disabled]=\"evidences.length >= 10 || loading\"\r\n                    (click)=\"addEvidence()\">+\r\n            </button>\r\n            <button type=\"button\" class=\"btn rounded-circle btn-danger\" [disabled]=\"evidences.length <= 0 || loading\"\r\n                    (click)=\"removeEvidence()\">\r\n              &times;\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\" formArrayName=\"evidence\">\r\n            <div *ngIf=\"evidences.length  > 0; else noEvidence\">\r\n              <div *ngFor=\"let i of rangeEvidence\" [formGroupName]=\"i\" [hidden]=\"i !== shownEvidenceIdx\" class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-3\">\r\n                      <span class=\"text-center seq-btn unselectable\"\r\n                            [hidden]=\"shownEvidenceIdx <= 0\"\r\n                            (click)=\"showPreviousEvidence()\">\r\n                        <\r\n                      </span>\r\n                    </div>\r\n                    <span class=\"col-6 text-center text-muted\">Evidencia {{shownEvidenceIdx + 1}}\r\n                      / {{evidences.length}}</span>\r\n                    <div class=\"col-3\">\r\n                      <span class=\"text-center seq-btn unselectable\"\r\n                            [hidden]=\"shownEvidenceIdx >= evidences.length - 1\"\r\n                            (click)=\"showNextEvidence()\">\r\n                        >\r\n                      </span>\r\n                    </div>\r\n                    <label class=\"col-12\">\r\n                      Link\r\n                      <input type=\"text\" style=\"resize: none\" formControlName=\"url\" class=\"form-control\"\r\n                             placeholder=\"https://www.example.com/evidence/file.png\" required>\r\n                    </label>\r\n                    <label class=\"col-12\">\r\n                      Descripción\r\n                      <textarea type=\"text\" style=\"resize: none\" formControlName=\"description\" class=\"form-control\"\r\n                                placeholder=\"Foto/video/comprimido que tiene...\" required></textarea>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12 text-danger mb-4\"\r\n                         *ngIf=\"description.invalid && (description.dirty || description.touched)\">\r\n                      <span>La descripción es obligatoria</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12 text-danger mb-4\" *ngIf=\"url.invalid && (url.dirty || url.touched)\">\r\n                      <span *ngIf=\"url.errors.required\">La URL no puede estar vacía</span>\r\n                      <span *ngIf=\"url.errors.pattern\">La URL no es válida</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ng-template #noEvidence>\r\n              <div class=\"row\">\r\n                <span class=\"col-12 text-center text-muted\">No hay evidencias</span>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-5\">\r\n    <div class=\"col-12 text-center\">\r\n      <button [disabled]=\"submissionForm.invalid || loading\" class=\"btn btn-primary\" style=\"width: 90%\" type=\"submit\">\r\n        <div *ngIf=\"loading; else waiting\" class=\"spinner-border text-light\"></div>\r\n        <ng-template #waiting><span>Subir participación</span></ng-template>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Challenge, ChallengeType} from '../../models/challenge.model';\r\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-challenges-list',\r\n  templateUrl: './challenges-list.component.html',\r\n  styleUrls: ['./challenges-list.component.css']\r\n})\r\nexport class ChallengesListComponent implements OnInit {\r\n  @Input() interactive = false;\r\n  @Input() notSubmittedOnly = false;\r\n  @Output() selected = new EventEmitter<Challenge>();\r\n\r\n  challenges$: Observable<Challenge[]>;\r\n  challengeTypes: {name: string, slug: ChallengeType, emoji: string}[];\r\n\r\n  selectedType: {name: string, slug: ChallengeType, emoji: string};\r\n\r\n  constructor(private challenges: ChallengeService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.challenges$ = this.challenges.getAll();\r\n    this.challengeTypes = this.challenges.types;\r\n    this.selectedType = this.challengeTypes[0];\r\n  }\r\n\r\n  filterByType(type: string, challenges: Challenge[]) {\r\n    return challenges.filter(challenge => challenge.type === type);\r\n  }\r\n\r\n  selectChallenge(challenge: Challenge) {\r\n    this.selected.emit(challenge);\r\n  }\r\n}\r\n","<div *ngIf=\"challenges$ | async as challenges; else loading\">\r\n  <div class=\"row \">\r\n    <!--div class=\"col-1\"></div-->\r\n    <div class=\"col-12 \">\r\n      <nav class=\"nav nav-pills justify-content-center\">\r\n        <a class=\"nav-item nav-link\" [title]=\"type.name\" data-toggle=\"tooltip\" data-placement=\"top\" [ngClass]=\"selectedType === type ? 'active' : ''\" *ngFor=\"let type of challengeTypes\"\r\n           (click)=\"selectedType = type\">{{type.emoji}} <span class=\"badge badge-light\">{{filterByType(type.slug, challenges).length}}</span></a>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-12 col-sm-10 \">\r\n      <app-challenge-list-group [notSubmittedOnly]=\"notSubmittedOnly\" [challenges]=\"filterByType(selectedType.slug, challenges)\" (selected)=\"selected.emit($event)\" ></app-challenge-list-group>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #loading>\r\n  <div class=\"row\">\r\n    <div class=\"col-12 text-center\">\r\n      <div class=\"spinner-border text-danger\"></div>\r\n    </div>\r\n    <div class=\"col-12 text-center text-danger\">\r\n      Cargando desafíos...\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {Challenge} from '../../models/challenge.model';\r\nimport {APISubmission} from '../../models/api-submission.model';\r\nimport {SubmissionsService} from '../../services/wp-data/submissions.service';\r\nimport {ChallengeService} from '../../services/wp-data/challenge.service';\r\n\r\n@Component({\r\n  selector: 'app-evaluation-form',\r\n  templateUrl: './evaluation-form.component.html',\r\n  styleUrls: ['./evaluation-form.component.css']\r\n})\r\nexport class EvaluationFormComponent implements OnInit, OnChanges {\r\n  @Input() challenge: Challenge = null;\r\n  @Input() submission: APISubmission = null;\r\n\r\n  @Output() evaluated = new EventEmitter();\r\n\r\n  comment = '';\r\n  loading = false;\r\n  baseScore = 0;\r\n  bonusScore = 0;\r\n\r\n  constructor(\r\n    private challenges: ChallengeService,\r\n    private submissions: SubmissionsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.updateScore();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.challenge)\r\n      this.updateScore();\r\n  }\r\n\r\n  get totalScore() {\r\n    return this.baseScore + this.bonusScore;\r\n  }\r\n\r\n  updateScore() {\r\n    if (this.challenge) {\r\n      this.baseScore = this.challenges.typeBySlug[this.challenge.type].defaultScore;\r\n    } else {\r\n      this.baseScore = 0;\r\n    }\r\n  }\r\n\r\n  approve() {\r\n    this.loading = true;\r\n    this.submissions.approve(this.submission, this.comment, this.totalScore)\r\n      .then(() => this.evaluated.emit())\r\n      .catch(() => this.loading = false);\r\n  }\r\n\r\n  reject() {\r\n    this.loading = true;\r\n    return this.submissions.reject(this.submission, this.comment)\r\n      .then(() => this.evaluated.emit());\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-6\">\r\n    <app-submission-display [submission]=\"submission\"></app-submission-display>\r\n  </div>\r\n  <div class=\"col-6\">\r\n    <app-challenge-display [challenge]=\"challenge\"></app-challenge-display>\r\n  </div>\r\n</div>\r\n<hr>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <label class=\"w-100\">Comentario Evaluación:</label>\r\n    <textarea id=\"comment\" class=\"form-control w-100\" [(ngModel)]=\"comment\"></textarea>\r\n  </div>\r\n  <div class=\"col-12 text-center\">\r\n    <div class=\"row justify-content-center mb-4\">\r\n      <div class=\"col-2\">\r\n        <label for=\"baseScore\">Puntaje base</label>\r\n        <input id=\"baseScore\" [value]=\"baseScore\" [disabled]=\"true\" type=\"number\" class=\"form-control\">\r\n      </div>\r\n      <div class=\"col-2\">\r\n        <span></span>\r\n        <span>+</span>\r\n      </div>\r\n      <div class=\"col-2\">\r\n        <label for=\"bonusScore\">Puntaje bonus</label>\r\n        <input id=\"bonusScore\" [(ngModel)]=\"bonusScore\" [max]=\"baseScore\" [min]=\"-baseScore+1\" type=\"number\" class=\"form-control\">\r\n      </div>\r\n      <div class=\"col-2\">\r\n        <span></span>\r\n        <span>=</span>\r\n      </div>\r\n      <div class=\"col-2 text-lg-center text-black-50\">\r\n        <span>{{totalScore}} puntos</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-6 text-center\">\r\n    <button class=\"btn btn-outline-success btn-lg w-100\" [disabled]=\"loading\" (click)=\"approve()\">\r\n      Aprobar con {{totalScore}} punto{{totalScore == 1 ? '': 's'}}\r\n    </button>\r\n  </div>\r\n  <div class=\"col-6 text-center\">\r\n    <button class=\"btn btn-outline-danger btn-lg w-100\" [disabled]=\"loading\" (click)=\"reject()\">\r\n      Reprobar\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {ForbiddenError} from '../../errors/forbidden-error';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\nimport {AppError} from '../../errors/app-error';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n  credentials = {\n    username: '',\n    password: ''\n  };\n\n  disabled = false;\n  error = null;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n    ) {}\n\n  login(): void {\n    this.error = null;\n    this.disabled = true;\n    this.auth.login(this.credentials.username, this.credentials.password)\n      .then(() => {\n        return this.router.navigate(['panel']);\n      })\n      .catch((err: AppError) => {\n        if (err instanceof ForbiddenError) {\n          this.error = 'Usuario y contraseña no coinciden';\n        } else {\n          this.error = 'Error desconocido';\n        }\n        this.disabled = false;\n      });\n  }\n\n  ngOnInit(): void {}\n}\n","<form class=\"login-form text-left\">\n  <div class=\"form-group\">\n    <label for=\"username\">Nombre de usuario</label>\n    <input id=\"username\" type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"credentials.username\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\" required>Contraseña</label>\n    <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"credentials.password\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-danger\" [disabled]=\"disabled\" (click)=\"login();$event.preventDefault()\">Iniciar Sesión</button>\n  <div class=\"alert alert-danger\" *ngIf=\"error\">{{error}}</div>\n</form>\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {APISubmission} from '../../models/api-submission.model';\r\n\r\n@Component({\r\n  selector: 'app-submission-display',\r\n  templateUrl: './submission-display.component.html',\r\n  styleUrls: ['./submission-display.component.css']\r\n})\r\nexport class SubmissionDisplayComponent implements OnInit {\r\n  @Input() submission: APISubmission;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <h4>Entrega del {{submission.submitted | date: 'fullDate'}}</h4>\r\n  <div class=\"col-12\">\r\n    {{submission.submission.comment}}\r\n  </div>\r\n  <div class=\"col-12\">\r\n    <h4 class=\"text-muted\">Evidencia</h4>\r\n    <ul class=\"list-group list-group-flush limit-scroll\">\r\n      <li class=\"list-group-item unselectable\" *ngFor=\"let evidence of submission.submission.evidence\">\r\n        <a [href]=\"evidence.url\" target=\"_blank\">{{evidence.description}}</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-submission-form',\r\n  templateUrl: './submission-form.component.html',\r\n  styleUrls: ['./submission-form.component.css']\r\n})\r\nexport class SubmissionFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>submission-form works!</p>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {APISubmission} from '../../models/api-submission.model';\r\n\r\n@Component({\r\n  selector: 'app-submission-list-group-item',\r\n  templateUrl: './submission-list-group-item.component.html',\r\n  styleUrls: ['./submission-list-group-item.component.css']\r\n})\r\nexport class SubmissionListGroupItemComponent implements OnInit {\r\n  @Input() submission: APISubmission;\r\n  @Output() selected = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  select() {\r\n    this.selected.emit();\r\n  }\r\n}\r\n","<a class=\"list-group-item list-group-item-action flex-column align-items-start\" (click)=\"select()\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"d-flex w-100 justify-content-between\">\r\n        <h5 class=\"mb-1 unselectable\">Entrega del {{submission.submitted | date: 'fullDate'}}</h5>\r\n        <small>\r\n          <a *ngIf=\"!submission.evaluation; else evaluated\" class=\"participate\"\r\n             (click)=\"$event.stopPropagation(); $event.preventDefault(); select()\">Evaluar</a>\r\n          <ng-template #evaluated>\r\n            <span class=\"text-success\" *ngIf=\"submission.evaluation.approved\">Aprobado</span>\r\n            <span class=\"text-danger\" *ngIf=\"!submission.evaluation.approved\">Rechazado</span>\r\n          </ng-template>\r\n        </small>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12 text-muted\">\r\n      <span>\r\n        {{submission.submission.evidence.length}}\r\n      </span>\r\n      <span *ngIf=\"submission.submission.evidence.length !== 1\">\r\n        evidencias\r\n      </span>\r\n      <span *ngIf=\"submission.submission.evidence.length === 1\">\r\n        evidencia\r\n      </span>\r\n    </div>\r\n    <div class=\"col-12 text-left\">\r\n      <small *ngIf=\"submission.submission.comment && submission.submission.comment !== ''; else noComments\">\r\n        <span>\r\n          Comentario:\r\n        </span>\r\n        <span class=\"text-muted\">\r\n          {{submission.submission.comment}}\r\n        </span>\r\n      </small>\r\n    </div>\r\n    <div class=\"col-12 text-left\">\r\n      <small *ngIf=\"submission.evaluation.comment && submission.evaluation.comment !== ''\">\r\n        <span>\r\n          Comentario Evaluador:\r\n        </span>\r\n        <span class=\"text-muted\">\r\n          {{submission.evaluation.comment}}\r\n        </span>\r\n      </small>\r\n      <span class=\"text-muted font-italic\" *ngIf=\"!submission.submission.comment || submission.submission.comment === ''\">\r\n        El evaluador no comentó la entrega\r\n      </span>\r\n      <ng-template #noComments>\r\n        <span class=\"text-muted font-italic\">No hay comentarios adjuntos a esta entrega</span>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</a>\r\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {Challenge} from '../../models/challenge.model';\r\nimport {GetSubmissionOptions, SubmissionsService} from '../../services/wp-data/submissions.service';\r\nimport {Observable} from 'rxjs';\r\nimport {APISubmission} from '../../models/api-submission.model';\r\n\r\n@Component({\r\n  selector: 'app-submission-list-group',\r\n  templateUrl: './submission-list-group.component.html',\r\n  styleUrls: ['./submission-list-group.component.css']\r\n})\r\nexport class SubmissionListGroupComponent implements OnInit, OnChanges {\r\n  @Input() challenge: Challenge;\r\n  @Input() onlyNotEvaluated = true;\r\n  @Output() selected = new EventEmitter<APISubmission>();\r\n\r\n  filters: Record<string, {name: string, options: GetSubmissionOptions}> = {\r\n    pending: {name: 'Pendientes', options: {notEvaluated: true}},\r\n    all: {name: 'Todo', options: {}},\r\n  };\r\n  filtersItems = Object.entries(this.filters);\r\n  filterCode = 'pending';\r\n\r\n  submissions$: Observable<APISubmission[]>;\r\n\r\n  constructor(private submissions: SubmissionsService) { }\r\n\r\n  onChallengeUpdate(challenge: Challenge) {\r\n    const options = this.filters[this.filterCode].options;\r\n    this.submissions$ = this.submissions.getFromChallenge(challenge, options);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onChallengeUpdate(this.challenge);\r\n  }\r\n\r\n  set activeFilter(code: string) {\r\n    this.filterCode = code;\r\n\r\n    const options = this.filters[this.filterCode].options;\r\n    this.submissions$ = this.submissions.getFromChallenge(this.challenge, options);\r\n  }\r\n\r\n  get activeFilter() {\r\n    return this.filterCode;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.challenge) {\r\n      const challenge: Challenge = changes.challenge.currentValue as Challenge;\r\n      this.onChallengeUpdate(challenge);\r\n      return;\r\n    }\r\n  }\r\n\r\n  select(submission: APISubmission) {\r\n    if (this.onlyNotEvaluated && !!submission.evaluation) return;\r\n    this.selected.emit(submission);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12 mb\">\r\n    <ul class=\"nav nav-pills nav-fill\">\r\n      <li class=\"nav-item\" *ngFor=\"let filter of filtersItems\">\r\n        <a [routerLink]=\"\" [className]=\"activeFilter === filter[0] ? 'nav-link active' : 'nav-link'\" (click)=\"activeFilter = filter[0]\">{{filter[1].name}}</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n<div class=\"challenge-list\" *ngIf=\"submissions$ | async as submissions; else loading\">\r\n  <div class=\"list-group\">\r\n    <app-submission-list-group-item *ngFor=\"let submission of submissions\" [submission]=\"submission\"\r\n                                    (selected)=\"select(submission)\"></app-submission-list-group-item>\r\n    <p class=\"text-muted text-center w-100\" *ngIf=\"submissions.length === 0 && filterCode === 'pending'\">\r\n      No quedan entregas pendientes para revisar\r\n    </p>\r\n    <p class=\"text-muted text-center w-100\" *ngIf=\"submissions.length === 0 && filterCode === 'all'\">\r\n      Todavía no hay participantes en esta desafío\r\n    </p>\r\n  </div>\r\n</div>\r\n<ng-template #loading>\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-12 text-center\">\r\n      <div class=\"spinner-border text-danger\"></div>\r\n      <div class=\"text-danger\">Cargando entregas...</div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","export class AppError extends Error {\r\n  constructor(message?: string, public error?: Error) {\r\n    super(message ? message : error?.message);\r\n  }\r\n}\r\n","import {AppError} from './app-error';\r\n\r\nexport class ForbiddenError extends AppError {}\r\n","import {AppError} from './app-error';\r\n\r\nexport class InvalidError extends AppError {}\r\n","import {AppError} from './app-error';\r\n\r\nexport class NotFoundError extends AppError {}\r\n","import {AppError} from './app-error';\r\n\r\nexport class UnauthorizedError extends AppError {}\r\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  desiredUrl: string;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.auth.isAuthenticated()) return true;\n    this.desiredUrl = state.url;\n    this.router.navigate(['/']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n\n@Injectable()\nexport class RedirectToPanel {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  resolve(): void {\n    if (this.authService.isAuthenticated()) this.router.navigate(['/panel']);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {PageMangerService} from './wp-data/page-manger.service';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\nimport {from, Observable} from 'rxjs';\r\nimport {User} from '../models/user.model';\r\n\r\ninterface JWTAuth {\r\n  token: string;\r\n  user: User;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private pm: PageMangerService) {}\r\n\r\n  public static get token(): string {\r\n    return this.auth?.token;\r\n  }\r\n\r\n  private static get auth(): JWTAuth | null {\r\n    return JSON.parse(localStorage.getItem('t'));\r\n  }\r\n\r\n  private static set auth(auth: JWTAuth | null) {\r\n    localStorage.setItem('t', JSON.stringify(auth));\r\n  }\r\n\r\n  public async login(username: string, password: string): Promise<JWTAuth> {\r\n    AuthService.auth = await this.pm.post<JWTAuth>('auth/login', {username, password});\r\n    return AuthService.auth;\r\n  }\r\n\r\n  public async registerUser(email: string, displayName: string, isAdmin: boolean = false): Promise<User> {\r\n    return await this.pm.post<User>('users', {\r\n      email, display_name: displayName, admin: isAdmin\r\n    });\r\n  }\r\n\r\n  public me(): Observable<User> {\r\n    return this.pm.get<User>('auth/me');\r\n  }\r\n\r\n  public logout() {\r\n    AuthService.auth = null;\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    if (AuthService.auth) {\r\n      const jwtHelper = new JwtHelperService();\r\n      if (jwtHelper.isTokenExpired(AuthService.auth.token)) this.logout();\r\n    }\r\n    return !!AuthService.auth;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Challenge, ChallengeType} from '../../models/challenge.model';\r\nimport {PageMangerService} from './page-manger.service';\r\nimport {Observable} from 'rxjs';\r\nimport {Submission} from '../../models/submission.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChallengeService {\r\n  public readonly types: {name: string, slug: ChallengeType, emoji: string, defaultScore: number}[] = [\r\n    {slug: 'art2d', name: 'Desafío de Arte 2D', emoji: '🎨', defaultScore: 35},\r\n    {slug: 'programming', name: 'Desafío de Programación', emoji: '💻', defaultScore: 35},\r\n    {slug: 'music', name: 'Desafío de Música', emoji: '🎶', defaultScore: 35},\r\n    {slug: 'art3d', name: 'Desafío de Arte 3D', emoji: '🎲', defaultScore: 35},\r\n    {slug: 'gamedev', name: 'Desafío de Desarrollo', emoji: '🎮', defaultScore: 100}\r\n  ];\r\n\r\n  public get typeBySlug(): Record<ChallengeType, {name: string, emoji: string, defaultScore: number}>  {\r\n    const types: any = {};\r\n    this.types.forEach(elem => {\r\n      types[elem.slug] = {\r\n        name: elem.name,\r\n        emoji: elem.emoji,\r\n        defaultScore: elem.defaultScore\r\n      };\r\n    });\r\n    return types as Record<ChallengeType, {name: string, emoji: string, defaultScore: number}> ;\r\n  }\r\n\r\n  constructor(private pm: PageMangerService) { }\r\n\r\n  create(challenge: Challenge): Promise<Challenge> {\r\n    challenge.notify = true;\r\n    return this.pm.post('challenges', challenge);\r\n  }\r\n\r\n  submit(submission: Submission, challenge: Challenge): Promise<Submission> {\r\n    return this.pm.post(`challenges/${challenge.id}/submissions`, submission);\r\n  }\r\n\r\n  getAll(): Observable<Challenge[]> {\r\n    return this.pm.get('challenges');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\nimport {AppError} from '../../errors/app-error';\nimport {NotFoundError} from '../../errors/not-found-error';\nimport {InvalidError} from '../../errors/invalid-error';\nimport {ForbiddenError} from '../../errors/forbidden-error';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {UnauthorizedError} from '../../errors/unauthorized-error';\nimport {JWTAuth} from '../../models/auth.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageMangerService {\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  private static get headers(): HttpHeaders {\n    let headers: HttpHeaders = new HttpHeaders();\n    const t: JWTAuth = JSON.parse(localStorage.getItem('t'));\n\n    if (t) {\n      headers = headers.set('Authorization', `Bearer ${t.token}`);\n    }\n    return headers;\n  }\n  private readonly url = 'https://usmgpm.herokuapp.com/api';\n\n  private static processError(error: HttpErrorResponse): AppError {\n    console.log(error.error);\n    if (error.status === 404) {\n      return new NotFoundError(`Could not find this resource: ${error.url}`, error);\n    } else if (error.status === 400) {\n      return new InvalidError('Invalid data sent', error);\n    } else if (error.status === 403) {\n      return new ForbiddenError('Forbidden', error);\n    } else if (error.status === 401) {\n      return new UnauthorizedError('Unauthorized', error);\n    } else {\n      return new AppError('Unknown error', error);\n    }\n  }\n\n  private processHttpObservableToPromise<T>(obs: Observable<any>): Promise<T> {\n    return obs.toPromise()\n      .catch(error => {\n        throw PageMangerService.processError(error);\n      })\n      .then(payload => payload as T);\n  }\n\n  private processHttpObservable<T>(obs: Observable<any>): Observable<T> {\n    return obs.pipe(\n      catchError(err => throwError(PageMangerService.processError(err))),\n      map(data => data as T)\n    );\n  }\n\n  public get<T>(namespace: string, params?: any): Observable<T> {\n    const options = {\n      params, headers: PageMangerService.headers\n    };\n    return this.processHttpObservable<T>(this.http.get(this.url + '/' + namespace, options));\n  }\n\n  public post<T>(namespace: string, data?: any): Promise<T> {\n    const options = {\n      headers: PageMangerService.headers\n    };\n    return this.processHttpObservableToPromise<T>(this.http.post(this.url + '/' + namespace, data, options));\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {Challenge} from '../../models/challenge.model';\r\nimport {PageMangerService} from './page-manger.service';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../../models/user.model';\r\nimport {map} from 'rxjs/operators';\r\nimport {APISubmission} from '../../models/api-submission.model';\r\n\r\nexport interface GetSubmissionOptions {\r\n  notEvaluated?: boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubmissionsService {\r\n  constructor(private pm: PageMangerService) {\r\n  }\r\n\r\n  private static _parseAPISubmission(sub: any): APISubmission {\r\n    sub.submitted = Date.parse(sub.submitted as string);\r\n    return sub as APISubmission;\r\n  }\r\n\r\n  get(user: User, challenge: Challenge): Observable<APISubmission> {\r\n    return this.pm.get(`challenges/${challenge.id}/submissions/${user.id}`)\r\n      .pipe(map(SubmissionsService._parseAPISubmission));\r\n  }\r\n\r\n  getFromUser(user: User, options: GetSubmissionOptions = {}): Observable<APISubmission[]> {\r\n    const params: any = {};\r\n    if (options.notEvaluated)\r\n      params.not_evaluated = options.notEvaluated;\r\n    return this.pm.get(`users/${user.id}/submissions`, params)\r\n      .pipe(map((subs: any[]) => subs.map(SubmissionsService._parseAPISubmission)));\r\n  }\r\n\r\n  getFromChallenge(challenge: Challenge, options: GetSubmissionOptions = {}): Observable<APISubmission[]> {\r\n    const params: any = {};\r\n    if (options.notEvaluated)\r\n      params.not_evaluated = options.notEvaluated;\r\n    return this.pm.get(`challenges/${challenge.id}/submissions`, params)\r\n      .pipe(map((subs: any[]) => subs.map(SubmissionsService._parseAPISubmission)));\r\n  }\r\n\r\n  approve(submission: APISubmission, comment: string, points: number) {\r\n    return this.pm.post(`challenges/${submission.challenge_id}/submissions/${submission.user_id}/evaluate`,\r\n      {approved: true, comment, points});\r\n  }\r\n\r\n  reject(submission: APISubmission, comment: string) {\r\n    return this.pm.post(`challenges/${submission.challenge_id}/submissions/${submission.user_id}/evaluate`,\r\n      {approved: false, comment, points: 0});\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Challenge} from '../../models/challenge.model';\r\nimport {APISubmission} from '../../models/api-submission.model';\r\n\r\n@Component({\r\n  selector: 'app-challenge-evaluation',\r\n  templateUrl: './challenge-evaluation.component.html',\r\n  styleUrls: ['./challenge-evaluation.component.css']\r\n})\r\nexport class ChallengeEvaluationComponent implements OnInit {\r\n  @Input() challenge: Challenge;\r\n  @Input() submission: APISubmission;\r\n  @Output() submitted = new EventEmitter();\r\n\r\n  constructor() { }\r\n  ngOnInit(): void { }\r\n\r\n  goBack() {\r\n    if (this.submission) {\r\n      this.submission = null;\r\n      return;\r\n    }\r\n    if (this.challenge) {\r\n      this.challenge = null;\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"submission; else waitingSubmission\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <app-evaluation-form [challenge]=\"challenge\" [submission]=\"submission\"\r\n                           (evaluated)=\"goBack()\"></app-evaluation-form>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-2\">\r\n      <button class=\"btn btn-dark\" [disabled]=\"challenge === null\" (click)=\"goBack()\">Volver</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #waitingSubmission>\r\n  <div class=\"row\">\r\n    <div class=\"col-5\">\r\n      <app-challenges-list [interactive]=\"true\" (selected)=\"challenge = $event\"></app-challenges-list>\r\n    </div>\r\n    <div class=\"col-7\">\r\n      <app-submission-list-group [challenge]=\"challenge\"\r\n                                 *ngIf=\"challenge; else waitingChallenge\"\r\n                                 (selected)=\"submission = $event\"\r\n      ></app-submission-list-group>\r\n      <ng-template #waitingChallenge>\r\n        <p class=\"text-muted text-center\">Selecciona un desafío de la lista a la izquierda</p>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {Challenge} from '../../models/challenge.model';\r\n\r\n@Component({\r\n  selector: 'app-challenge-submission',\r\n  templateUrl: './challenge-submission.component.html',\r\n  styleUrls: ['./challenge-submission.component.css']\r\n})\r\nexport class ChallengeSubmissionComponent implements OnInit {\r\n  @Output() submitted = new EventEmitter<void>();\r\n\r\n  challenge: Challenge;\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"row\" *ngIf=\"challenge; else waitingChallenge\">\r\n  <div class=\"col-12\">\r\n    <app-challenge-submission-form (submitted)=\"submitted.emit()\" [challenge]=\"challenge\"></app-challenge-submission-form>\r\n  </div>\r\n</div>\r\n<ng-template #waitingChallenge>\r\n  <app-challenges-list [notSubmittedOnly]=\"true\" [interactive]=\"true\" (selected)=\"challenge = $event\"></app-challenges-list>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-card',\n  templateUrl: './login-card.component.html',\n  styleUrls: ['./login-card.component.css']\n})\nexport class LoginCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron vertical-center\">\r\n  <div class=\"container text-center \">\r\n    <div class=\"row align-items-center justify-content-center\">\r\n      <div class=\"col-sm-8 align-self-center \">\r\n        <div class=\"card \">\r\n          <div class=\"card-body \">\r\n            <h1>USM Games Page Manager</h1>\r\n            <div class=\"row justify-content-center\">\r\n              <div class=\"col-10\">\r\n                <p class=\"text-muted text-left\">\r\n                  Utiliza tus credenciales de usmgames.cl para\r\n                  acceder a esta aplicación.\r\n                </p>\r\n                <app-login-form></app-login-form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {APISubmission} from '../../models/api-submission.model';\nimport {from, Observable} from 'rxjs';\nimport {SubmissionsService} from '../../services/wp-data/submissions.service';\nimport {User} from '../../models/user.model';\n\n@Component({\n  selector: 'app-my-submissions',\n  templateUrl: './my-submissions.component.html',\n  styleUrls: ['./my-submissions.component.css']\n})\nexport class MySubmissionsComponent implements OnInit, OnChanges {\n  @Input() user?: User;\n  submissions$: Observable<APISubmission[]>;\n  selectedSubmission: APISubmission | null = null;\n\n  constructor(\n    private submissions: SubmissionsService\n  ) { }\n\n  ngOnInit(): void {\n    this.updateSubmissions();\n  }\n\n  updateSubmissions() {\n    if (this.user) {\n      this.submissions$ = this.submissions.getFromUser(this.user);\n    } else {\n      this.submissions$ = from(Promise.resolve(null));\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.user) {\n      this.updateSubmissions();\n    }\n  }\n}\n","<div class=\"challenge-list\" *ngIf=\"submissions$ | async as submissions; else loading\">\n  <div class=\"row\">\n    <div class=\"col-5\">\n    <div class=\"list-group\">\n      <app-submission-list-group-item *ngFor=\"let submission of submissions\" [submission]=\"submission\" (selected)=\"selectedSubmission = submission\"></app-submission-list-group-item>\n      <p class=\"text-muted text-center w-100\" *ngIf=\"submissions.length === 0\">\n        No has realizado entregas aún\n      </p>\n    </div>\n    </div>\n    <div class=\"col-7\">\n      <app-submission-display *ngIf=\"selectedSubmission !== null; else noSubmission\" [submission]=\"selectedSubmission\"></app-submission-display>\n      <ng-template #noSubmission>\n        <p class=\"text-muted text-center w-100\" *ngIf=\"submissions.length === 0\">\n          Selecciona una entrega de la lista a la izquierda\n        </p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n<ng-template #loading>\n  <div class=\"row mt-2\">\n    <div class=\"col-12 text-center\">\n      <div class=\"spinner-border text-danger\"></div>\n      <div class=\"text-danger\">Cargando entregas...</div>\n    </div>\n  </div>\n</ng-template>\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\r\nimport {User} from '../../models/user.model';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {ForbiddenError} from '../../errors/forbidden-error';\r\nimport {AppError} from '../../errors/app-error';\r\n\r\n@Component({\r\n  selector: 'app-user-panel',\r\n  templateUrl: './user-panel.component.html',\r\n  styleUrls: ['./user-panel.component.css']\r\n})\r\nexport class UserPanelComponent implements OnInit {\r\n  user$: Observable<User>;\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private modalService: NgbModal\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.user$ = this.auth.me()\r\n      .pipe(catchError((err: AppError) => {\r\n        if (err instanceof ForbiddenError) {\r\n          return this.logout().then(() => null);\r\n        }\r\n      }));\r\n  }\r\n\r\n  openModal(content) {\r\n    return this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'xl'}).result;\r\n  }\r\n\r\n  closeModal(modal: NgbModalRef) {\r\n    modal.dismiss();\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n    return this.router.navigate(['/']);\r\n  }\r\n}\r\n","<div *ngIf=\"user$ | async as user; else loading\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"card bg-dark mb-3 col-12 text-center\">\r\n        <div class=\"card-body\">\r\n          <h4>Bienvenid@: {{user.display_name}} ({{user.roles.join(', ')}})</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col col-panel-buttons  \">\r\n      <div *ngIf=\"user.roles.includes('administrator')\" class=\"row-8 text-center align-items-center\">\r\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"openModal(createChallenge)\">\r\n          Crear Desafío 🆕\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"user.roles.includes('administrator')\" class=\"row-6 text-center align-items-center\">\r\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"openModal(evaluateChallenge)\">\r\n          Evaluar desafíos 👍\r\n        </button>\r\n      </div>\r\n      <div *ngIf=\"user.roles.includes('administrator')\" class=\"row-6 text-center align-items-center\">\r\n        <button type=\"button\" class=\"btn btn-light\" (click)=\"openModal(registerUser)\">\r\n          Registrar usuario 👽\r\n        </button>\r\n      </div>\r\n      <div class='row-6 text-center align-items-center'>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(mySubmissions)\">\r\n          Mis entregas 👾\r\n        </button>\r\n      </div>\r\n      <div class='row-6 text-center align-items-center'>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(submitChallenge)\">\r\n          Realizar Entrega 👾\r\n        </button>\r\n      </div>\r\n      <div class='row-4 text-center align-items-center '>\r\n        <button type=\"button\" class=\"btn btn-primary\" id='exit' (click)=\"logout()\">\r\n          Cerrar Sesión\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #loading>\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-12 text-center\">\r\n      <div class=\"spinner-border text-danger\"></div>\r\n      <div class=\"text-danger\">Cargando usuario...</div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<ng-template #createChallenge let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Crear Desafío</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal(modal)\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-challenge-create-form (submitted)=\"closeModal(modal)\"></app-challenge-create-form>\r\n  </div>\r\n</ng-template>\r\n<ng-template #evaluateChallenge let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Evaluar desafío</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal(modal)\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-challenge-evaluation></app-challenge-evaluation>\r\n  </div>\r\n</ng-template>\r\n<ng-template #registerUser let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Registrar Usuario</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal(modal)\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-user-register></app-user-register>\r\n  </div>\r\n</ng-template>\r\n<ng-template #submitChallenge let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Realizar entrega</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal(modal)\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-challenge-submission (submitted)=\"closeModal(modal)\"></app-challenge-submission>\r\n  </div>\r\n</ng-template>\r\n<ng-template #mySubmissions let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Mis entregas</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeModal(modal)\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-my-submissions [user]=\"user$ | async\"></app-my-submissions>\r\n  </div>\r\n</ng-template>\r\n<div class=\"row mb-2 info\">\r\n  <div class=\"col-12\">\r\n    <div class=\"alert alert-info\">\r\n      Esta aplicación se encuentra en Beta. Si encuentra un error o tiene alguna consulta, por favor no dude\r\n      en poner un issue en nuestro <a href=\"https://github.com/usm-games/usmgames-page-manager/issues\" target=\"_blank\">repositorio de GitHub</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthService} from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-user-register',\r\n  templateUrl: './user-register.component.html',\r\n  styleUrls: ['./user-register.component.css']\r\n})\r\nexport class UserRegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n\r\n  constructor(private users: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = new FormGroup({\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      displayName: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4)\r\n      ]),\r\n      isAdmin: new FormControl(false)\r\n    });\r\n  }\r\n\r\n  get email() {\r\n    return this.registerForm.get('email') as FormControl;\r\n  }\r\n\r\n  get displayName() {\r\n    return this.registerForm.get('displayName') as FormControl;\r\n  }\r\n\r\n  get isAdmin() {\r\n    return this.registerForm.get('isAdmin') as FormControl;\r\n  }\r\n\r\n  register() {\r\n    this.loading = true;\r\n    return this.users.registerUser(this.email.value, this.displayName.value, this.isAdmin.value)\r\n      .then(() => {\r\n        this.email.setValue('');\r\n        this.displayName.setValue('');\r\n        this.isAdmin.setValue(false);\r\n      })\r\n      .finally(() => this.loading = false);\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-lg-6 col-sm-12\">\r\n      <form (submit)=\"register()\" [formGroup]=\"registerForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-12 mb-4\">\r\n            <label for=\"email\">E-mail</label>\r\n            <input class=\"form-control\" type=\"text\" id=\"email\" [formControl]=\"email\" name=\"email\">\r\n          </div>\r\n          <div class=\"col-12 mb-4\">\r\n            <label for=\"displayName\">Nombre y Apellido</label>\r\n            <input class=\"form-control\" type=\"text\" id=\"displayName\" [formControl]=\"displayName\" name=\"displayName\">\r\n          </div>\r\n          <div class=\"col-12 mb-4\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <label>Es administrador</label>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-6 text-center\">\r\n                <label for=\"isAdmin\">Sí\r\n                  <input class=\"form-control\" type=\"radio\" id=\"isAdmin\" [formControl]=\"isAdmin\" [value]=\"true\"\r\n                         name=\"isAdmin\">\r\n                </label>\r\n              </div>\r\n              <div class=\"col-6 text-center\">\r\n                <label for=\"isNotAdmin\">No\r\n                  <input class=\"form-control\" type=\"radio\" id=\"isNotAdmin\" [formControl]=\"isAdmin\" [value]=\"false\"\r\n                         name=\"isAdmin\">\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <button class=\"btn btn-primary w-100\" [disabled]=\"loading || registerForm.invalid\" type=\"submit\">\r\n                  Registrar Usuario\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"text-sm-left text-danger text-center col-12\"\r\n                   *ngIf=\"email.invalid && (email.dirty || email.touched)\">\r\n                <p *ngIf=\"email.errors.required\">*El correo electrónico es obligatorio</p>\r\n                <p *ngIf=\"email.errors.email\">*Correo electrónico inválido</p>\r\n              </div>\r\n              <div class=\"text-sm-left text-danger text-center col-12\"\r\n                   *ngIf=\"displayName.invalid && (displayName.dirty || displayName.touched)\">\r\n                <p *ngIf=\"displayName.errors.required\">*El nombre es obligatorio</p>\r\n                <p *ngIf=\"displayName.errors.minlength\">*El nombre debe tener al menos 4 caracteres</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}